task,variable,variant,count
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Ok),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(WriteEnableFailed)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(HashBadRange)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(HashError)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(HashNotConfigured)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(NoDevSelect)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(NotMuxedToSP)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(Sector0IsReserved)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(NoPersistentData)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(MonotonicCounterOverflow)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(ServerRestarted)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Ok),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(WriteEnableFailed)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(HashBadRange)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(HashError)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(HashNotConfigured)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(NoDevSelect)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(NotMuxedToSP)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(Sector0IsReserved)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(NoPersistentData)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(MonotonicCounterOverflow)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(ServerRestarted)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Ok),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(WriteEnableFailed)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(HashBadRange)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(HashError)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(HashNotConfigured)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(NoDevSelect)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(NotMuxedToSP)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(Sector0IsReserved)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(NoPersistentData)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(MonotonicCounterOverflow)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(ServerRestarted)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Ok),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(WriteEnableFailed)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(HashBadRange)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(HashError)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(HashNotConfigured)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(NoDevSelect)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(NotMuxedToSP)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(Sector0IsReserved)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(NoPersistentData)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(MonotonicCounterOverflow)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(ServerRestarted)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Ok),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(WriteEnableFailed)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(HashBadRange)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(HashError)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(HashNotConfigured)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(NoDevSelect)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(NotMuxedToSP)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(Sector0IsReserved)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(NoPersistentData)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(MonotonicCounterOverflow)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(ServerRestarted)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Ok),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(WriteEnableFailed)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(HashBadRange)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(HashError)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(HashNotConfigured)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(NoDevSelect)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(NotMuxedToSP)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(Sector0IsReserved)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(NoPersistentData)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(MonotonicCounterOverflow)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(ServerRestarted)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Ok),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(WriteEnableFailed)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(HashBadRange)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(HashError)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(HashNotConfigured)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(NoDevSelect)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(NotMuxedToSP)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(Sector0IsReserved)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(NoPersistentData)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(MonotonicCounterOverflow)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(ServerRestarted)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Ok),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(WriteEnableFailed)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(HashBadRange)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(HashError)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(HashNotConfigured)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(NoDevSelect)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(NotMuxedToSP)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(Sector0IsReserved)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(NoPersistentData)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(MonotonicCounterOverflow)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(ServerRestarted)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Ok),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(WriteEnableFailed)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(HashBadRange)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(HashError)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(HashNotConfigured)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(NoDevSelect)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(NotMuxedToSP)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(Sector0IsReserved)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(NoPersistentData)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(MonotonicCounterOverflow)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(ServerRestarted)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Ok),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(WriteEnableFailed)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(HashBadRange)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(HashError)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(HashNotConfigured)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(NoDevSelect)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(NotMuxedToSP)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(Sector0IsReserved)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(NoPersistentData)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(MonotonicCounterOverflow)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(ServerRestarted)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Ok),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(WriteEnableFailed)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(HashBadRange)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(HashError)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(HashNotConfigured)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(NoDevSelect)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(NotMuxedToSP)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(Sector0IsReserved)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(NoPersistentData)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(MonotonicCounterOverflow)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(ServerRestarted)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Ok),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(WriteEnableFailed)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(HashBadRange)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(HashError)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(HashNotConfigured)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(NoDevSelect)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(NotMuxedToSP)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(Sector0IsReserved)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(NoPersistentData)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(MonotonicCounterOverflow)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(ServerRestarted)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Ok),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(WriteEnableFailed)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(HashBadRange)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(HashError)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(HashNotConfigured)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(NoDevSelect)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(NotMuxedToSP)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(Sector0IsReserved)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(NoPersistentData)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(MonotonicCounterOverflow)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(ServerRestarted)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Ok),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(WriteEnableFailed)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(HashBadRange)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(HashError)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(HashNotConfigured)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(NoDevSelect)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(NotMuxedToSP)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(Sector0IsReserved)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(NoPersistentData)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(MonotonicCounterOverflow)),0
control_plane_agent,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(ServerRestarted)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Ok),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(IllegalTransition)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(MuxToHostCPUFailed)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(MuxToSPFailed)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(ReadRegsFailed)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(CPUNotPresent)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(UnrecognizedCPU)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(A1Timeout)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(A0TimeoutGroupC)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(A0Timeout)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(I2cFault)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(ServerRestarted)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Ok),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(IllegalTransition)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(MuxToHostCPUFailed)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(MuxToSPFailed)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(ReadRegsFailed)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(CPUNotPresent)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(UnrecognizedCPU)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(A1Timeout)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(A0TimeoutGroupC)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(A0Timeout)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(I2cFault)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(ServerRestarted)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Ok),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(IllegalTransition)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(MuxToHostCPUFailed)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(MuxToSPFailed)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(ReadRegsFailed)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(CPUNotPresent)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(UnrecognizedCPU)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(A1Timeout)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(A0TimeoutGroupC)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(A0Timeout)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(I2cFault)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(ServerRestarted)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Ok),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(IllegalTransition)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(MuxToHostCPUFailed)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(MuxToSPFailed)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(ReadRegsFailed)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(CPUNotPresent)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(UnrecognizedCPU)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(A1Timeout)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(A0TimeoutGroupC)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(A0Timeout)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(I2cFault)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(ServerRestarted)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,send_hardware_nmi(Ok),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,send_hardware_nmi(Err),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Ok),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(IllegalTransition)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(MuxToHostCPUFailed)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(MuxToSPFailed)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(ReadRegsFailed)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(CPUNotPresent)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(UnrecognizedCPU)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(A1Timeout)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(A0TimeoutGroupC)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(A0Timeout)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(I2cFault)),0
control_plane_agent,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(ServerRestarted)),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Ok),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(InvalidCrc))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(FlowError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(UnsupportedProtocol))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(BadMessageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(BadMessageLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(CannotAssertCSn))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(Timeout))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(Deserialization))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(RotIrqRemainsAsserted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(UnexpectedResponse))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(BadUpdateStatus))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(Desynchronized))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Spi(BadTransferSize))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Spi(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Spi(NothingToRelease))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Spi(BadDevice))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(BadLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(UpdateInProgress))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(OutOfBounds))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(EccDoubleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(EccSingleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(SecureErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(ReadProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(WriteEraseErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(InconsistencyErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(StrobeErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(ProgSeqErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(WriteProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(BadImageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(UpdateAlreadyFinished))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(UpdateNotStarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(RunningImage))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(FlashError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(FlashIllegalRead))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(FlashReadFail))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(MissingHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(InvalidHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(ImageBoardMismatch))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(ImageBoardUnknown))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(NotImplemented))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(MissingHandoffData))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Sprockets(BadEncoding))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Sprockets(UnsupportedVersion))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Ok),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(InvalidCrc))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(FlowError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(UnsupportedProtocol))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(BadMessageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(BadMessageLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(CannotAssertCSn))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(Timeout))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(Deserialization))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(RotIrqRemainsAsserted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(UnexpectedResponse))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(BadUpdateStatus))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(Desynchronized))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Spi(BadTransferSize))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Spi(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Spi(NothingToRelease))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Spi(BadDevice))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(BadLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(UpdateInProgress))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(OutOfBounds))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(EccDoubleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(EccSingleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(SecureErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(ReadProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(WriteEraseErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(InconsistencyErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(StrobeErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(ProgSeqErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(WriteProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(BadImageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(UpdateAlreadyFinished))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(UpdateNotStarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(RunningImage))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(FlashError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(FlashIllegalRead))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(FlashReadFail))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(MissingHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(InvalidHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(ImageBoardMismatch))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(ImageBoardUnknown))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(NotImplemented))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(MissingHandoffData))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Sprockets(BadEncoding))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Sprockets(UnsupportedVersion))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Ok),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(InvalidCrc))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(FlowError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(UnsupportedProtocol))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(BadMessageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(BadMessageLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(CannotAssertCSn))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(Timeout))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(Deserialization))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(RotIrqRemainsAsserted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(UnexpectedResponse))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(BadUpdateStatus))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(Desynchronized))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Spi(BadTransferSize))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Spi(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Spi(NothingToRelease))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Spi(BadDevice))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(BadLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(UpdateInProgress))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(OutOfBounds))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(EccDoubleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(EccSingleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(SecureErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(ReadProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(WriteEraseErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(InconsistencyErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(StrobeErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(ProgSeqErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(WriteProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(BadImageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(UpdateAlreadyFinished))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(UpdateNotStarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(RunningImage))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(FlashError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(FlashIllegalRead))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(FlashReadFail))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(MissingHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(InvalidHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(ImageBoardMismatch))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(ImageBoardUnknown))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(NotImplemented))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(MissingHandoffData))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Sprockets(BadEncoding))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Sprockets(UnsupportedVersion))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Ok),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(InvalidCrc))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(FlowError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(UnsupportedProtocol))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(BadMessageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(BadMessageLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(CannotAssertCSn))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(Timeout))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(Deserialization))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(RotIrqRemainsAsserted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(UnexpectedResponse))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(BadUpdateStatus))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(Desynchronized))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Spi(BadTransferSize))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Spi(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Spi(NothingToRelease))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Spi(BadDevice))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(BadLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(UpdateInProgress))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(OutOfBounds))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(EccDoubleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(EccSingleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(SecureErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(ReadProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(WriteEraseErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(InconsistencyErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(StrobeErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(ProgSeqErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(WriteProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(BadImageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(UpdateAlreadyFinished))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(UpdateNotStarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(RunningImage))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(FlashError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(FlashIllegalRead))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(FlashReadFail))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(MissingHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(InvalidHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(ImageBoardMismatch))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(ImageBoardUnknown))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(NotImplemented))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(MissingHandoffData))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Sprockets(BadEncoding))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Sprockets(UnsupportedVersion))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Ok),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(InvalidCrc))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(FlowError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(UnsupportedProtocol))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(BadMessageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(BadMessageLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(CannotAssertCSn))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(Timeout))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(Deserialization))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(RotIrqRemainsAsserted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(UnexpectedResponse))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(BadUpdateStatus))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(Desynchronized))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Spi(BadTransferSize))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Spi(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Spi(NothingToRelease))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Spi(BadDevice))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(BadLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(UpdateInProgress))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(OutOfBounds))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(EccDoubleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(EccSingleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(SecureErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(ReadProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(WriteEraseErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(InconsistencyErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(StrobeErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(ProgSeqErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(WriteProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(BadImageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(UpdateAlreadyFinished))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(UpdateNotStarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(RunningImage))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(FlashError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(FlashIllegalRead))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(FlashReadFail))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(MissingHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(InvalidHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(ImageBoardMismatch))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(ImageBoardUnknown))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(NotImplemented))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(MissingHandoffData))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Sprockets(BadEncoding))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Sprockets(UnsupportedVersion))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Ok),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(InvalidCrc))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(FlowError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(UnsupportedProtocol))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(BadMessageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(BadMessageLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(CannotAssertCSn))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(Timeout))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(Deserialization))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(RotIrqRemainsAsserted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(UnexpectedResponse))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(BadUpdateStatus))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(Desynchronized))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Spi(BadTransferSize))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Spi(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Spi(NothingToRelease))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Spi(BadDevice))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(BadLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(UpdateInProgress))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(OutOfBounds))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(EccDoubleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(EccSingleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(SecureErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(ReadProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(WriteEraseErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(InconsistencyErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(StrobeErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(ProgSeqErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(WriteProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(BadImageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(UpdateAlreadyFinished))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(UpdateNotStarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(RunningImage))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(FlashError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(FlashIllegalRead))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(FlashReadFail))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(MissingHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(InvalidHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(ImageBoardMismatch))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(ImageBoardUnknown))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(NotImplemented))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(MissingHandoffData))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Sprockets(BadEncoding))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Sprockets(UnsupportedVersion))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Ok),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(InvalidCrc))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(FlowError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(UnsupportedProtocol))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(BadMessageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(BadMessageLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(CannotAssertCSn))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(Timeout))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(Deserialization))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(RotIrqRemainsAsserted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(UnexpectedResponse))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(BadUpdateStatus))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(Desynchronized))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Spi(BadTransferSize))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Spi(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Spi(NothingToRelease))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Spi(BadDevice))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(BadLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(UpdateInProgress))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(OutOfBounds))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(EccDoubleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(EccSingleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(SecureErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(ReadProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(WriteEraseErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(InconsistencyErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(StrobeErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(ProgSeqErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(WriteProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(BadImageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(UpdateAlreadyFinished))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(UpdateNotStarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(RunningImage))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(FlashError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(FlashIllegalRead))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(FlashReadFail))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(MissingHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(InvalidHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(ImageBoardMismatch))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(ImageBoardUnknown))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(NotImplemented))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(MissingHandoffData))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Sprockets(BadEncoding))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Sprockets(UnsupportedVersion))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Ok),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(InvalidCrc))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(FlowError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(UnsupportedProtocol))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(BadMessageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(BadMessageLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(CannotAssertCSn))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(Timeout))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(Deserialization))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(RotIrqRemainsAsserted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(UnexpectedResponse))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(BadUpdateStatus))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(Desynchronized))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Spi(BadTransferSize))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Spi(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Spi(NothingToRelease))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Spi(BadDevice))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(BadLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(UpdateInProgress))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(OutOfBounds))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(EccDoubleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(EccSingleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(SecureErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(ReadProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(WriteEraseErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(InconsistencyErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(StrobeErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(ProgSeqErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(WriteProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(BadImageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(UpdateAlreadyFinished))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(UpdateNotStarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(RunningImage))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(FlashError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(FlashIllegalRead))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(FlashReadFail))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(MissingHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(InvalidHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(ImageBoardMismatch))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(ImageBoardUnknown))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(NotImplemented))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(MissingHandoffData))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Sprockets(BadEncoding))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Sprockets(UnsupportedVersion))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Ok),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(InvalidCrc))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(FlowError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(UnsupportedProtocol))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(BadMessageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(BadMessageLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(CannotAssertCSn))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(Timeout))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(Deserialization))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(RotIrqRemainsAsserted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(UnexpectedResponse))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(BadUpdateStatus))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(Desynchronized))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Spi(BadTransferSize))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Spi(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Spi(NothingToRelease))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Spi(BadDevice))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(BadLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(UpdateInProgress))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(OutOfBounds))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(EccDoubleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(EccSingleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(SecureErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(ReadProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(WriteEraseErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(InconsistencyErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(StrobeErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(ProgSeqErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(WriteProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(BadImageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(UpdateAlreadyFinished))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(UpdateNotStarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(RunningImage))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(FlashError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(FlashIllegalRead))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(FlashReadFail))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(MissingHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(InvalidHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(ImageBoardMismatch))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(ImageBoardUnknown))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(NotImplemented))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(MissingHandoffData))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Sprockets(BadEncoding))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Sprockets(UnsupportedVersion))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Ok),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(InvalidCrc))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(FlowError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(UnsupportedProtocol))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(BadMessageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(BadMessageLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(CannotAssertCSn))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(Timeout))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(Deserialization))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(RotIrqRemainsAsserted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(UnexpectedResponse))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(BadUpdateStatus))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(Desynchronized))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Spi(BadTransferSize))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Spi(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Spi(NothingToRelease))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Spi(BadDevice))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(BadLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(UpdateInProgress))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(OutOfBounds))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(EccDoubleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(EccSingleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(SecureErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(ReadProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(WriteEraseErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(InconsistencyErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(StrobeErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(ProgSeqErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(WriteProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(BadImageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(UpdateAlreadyFinished))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(UpdateNotStarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(RunningImage))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(FlashError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(FlashIllegalRead))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(FlashReadFail))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(MissingHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(InvalidHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(ImageBoardMismatch))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(ImageBoardUnknown))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(NotImplemented))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(MissingHandoffData))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Sprockets(BadEncoding))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Sprockets(UnsupportedVersion))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Ok),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(InvalidCrc))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(FlowError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(UnsupportedProtocol))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(BadMessageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(BadMessageLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(CannotAssertCSn))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(Timeout))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(Deserialization))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(RotIrqRemainsAsserted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(UnexpectedResponse))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(BadUpdateStatus))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(Desynchronized))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Spi(BadTransferSize))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Spi(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Spi(NothingToRelease))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Spi(BadDevice))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(BadLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(UpdateInProgress))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(OutOfBounds))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(EccDoubleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(EccSingleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(SecureErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(ReadProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(WriteEraseErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(InconsistencyErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(StrobeErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(ProgSeqErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(WriteProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(BadImageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(UpdateAlreadyFinished))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(UpdateNotStarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(RunningImage))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(FlashError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(FlashIllegalRead))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(FlashReadFail))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(MissingHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(InvalidHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(ImageBoardMismatch))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(ImageBoardUnknown))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(NotImplemented))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(MissingHandoffData))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Sprockets(BadEncoding))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Sprockets(UnsupportedVersion))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Ok),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(InvalidCrc)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(FlowError)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(UnsupportedProtocol)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(BadMessageType)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(BadMessageLength)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(CannotAssertCSn)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(Timeout)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(Deserialization)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(RotIrqRemainsAsserted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(UnexpectedResponse)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(BadUpdateStatus)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(Desynchronized)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Spi(BadTransferSize)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Spi(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Spi(NothingToRelease)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Spi(BadDevice)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(BadLength)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(UpdateInProgress)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(OutOfBounds)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(EccDoubleErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(EccSingleErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(SecureErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(ReadProtErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(WriteEraseErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(InconsistencyErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(StrobeErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(ProgSeqErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(WriteProtErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(BadImageType)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(UpdateAlreadyFinished)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(UpdateNotStarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(RunningImage)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(FlashError)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(FlashIllegalRead)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(FlashReadFail)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(MissingHeaderBlock)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(InvalidHeaderBlock)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(ImageBoardMismatch)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(ImageBoardUnknown)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(NotImplemented)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(MissingHandoffData)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Sprockets(BadEncoding)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Sprockets(UnsupportedVersion)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Dump)),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Ok),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(InvalidCrc)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(FlowError)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(UnsupportedProtocol)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(BadMessageType)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(BadMessageLength)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(CannotAssertCSn)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(Timeout)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(Deserialization)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(RotIrqRemainsAsserted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(UnexpectedResponse)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(BadUpdateStatus)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(Desynchronized)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Spi(BadTransferSize)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Spi(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Spi(NothingToRelease)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Spi(BadDevice)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(BadLength)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(UpdateInProgress)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(OutOfBounds)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(EccDoubleErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(EccSingleErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(SecureErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(ReadProtErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(WriteEraseErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(InconsistencyErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(StrobeErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(ProgSeqErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(WriteProtErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(BadImageType)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(UpdateAlreadyFinished)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(UpdateNotStarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(RunningImage)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(FlashError)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(FlashIllegalRead)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(FlashReadFail)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(MissingHeaderBlock)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(InvalidHeaderBlock)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(ImageBoardMismatch)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(ImageBoardUnknown)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(NotImplemented)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(MissingHandoffData)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Sprockets(BadEncoding)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Sprockets(UnsupportedVersion)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Caboose(InvalidRead))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Caboose(ReadFailed))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Caboose(MissingCaboose))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Caboose(NoImageHeader))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Ok),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(InvalidCrc)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(FlowError)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(UnsupportedProtocol)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(BadMessageType)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(BadMessageLength)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(CannotAssertCSn)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(Timeout)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(Deserialization)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(RotIrqRemainsAsserted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(UnexpectedResponse)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(BadUpdateStatus)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(Desynchronized)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Spi(BadTransferSize)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Spi(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Spi(NothingToRelease)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Spi(BadDevice)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(BadLength)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(UpdateInProgress)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(OutOfBounds)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(EccDoubleErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(EccSingleErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(SecureErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(ReadProtErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(WriteEraseErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(InconsistencyErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(StrobeErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(ProgSeqErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(WriteProtErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(BadImageType)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(UpdateAlreadyFinished)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(UpdateNotStarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(RunningImage)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(FlashError)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(FlashIllegalRead)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(FlashReadFail)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(MissingHeaderBlock)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(InvalidHeaderBlock)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(ImageBoardMismatch)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(ImageBoardUnknown)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(NotImplemented)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(MissingHandoffData)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Sprockets(BadEncoding)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Sprockets(UnsupportedVersion)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Caboose(InvalidRead))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Caboose(ReadFailed))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Caboose(MissingCaboose))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Caboose(NoImageHeader))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Ok),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(InvalidCrc))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(FlowError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(UnsupportedProtocol))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(BadMessageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(BadMessageLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(CannotAssertCSn))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(Timeout))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(Deserialization))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(RotIrqRemainsAsserted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(UnexpectedResponse))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(BadUpdateStatus))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(Desynchronized))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Spi(BadTransferSize))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Spi(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Spi(NothingToRelease))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Spi(BadDevice))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(BadLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(UpdateInProgress))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(OutOfBounds))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(EccDoubleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(EccSingleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(SecureErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(ReadProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(WriteEraseErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(InconsistencyErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(StrobeErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(ProgSeqErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(WriteProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(BadImageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(UpdateAlreadyFinished))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(UpdateNotStarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(RunningImage))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(FlashError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(FlashIllegalRead))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(FlashReadFail))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(MissingHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(InvalidHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(ImageBoardMismatch))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(ImageBoardUnknown))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(NotImplemented))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(MissingHandoffData))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Sprockets(BadEncoding))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Sprockets(UnsupportedVersion))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Ok),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(InvalidCrc)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(FlowError)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(UnsupportedProtocol)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(BadMessageType)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(BadMessageLength)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(CannotAssertCSn)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(Timeout)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(Deserialization)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(RotIrqRemainsAsserted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(UnexpectedResponse)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(BadUpdateStatus)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(Desynchronized)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Spi(BadTransferSize)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Spi(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Spi(NothingToRelease)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Spi(BadDevice)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(BadLength)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(UpdateInProgress)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(OutOfBounds)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(EccDoubleErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(EccSingleErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(SecureErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(ReadProtErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(WriteEraseErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(InconsistencyErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(StrobeErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(ProgSeqErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(WriteProtErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(BadImageType)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(UpdateAlreadyFinished)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(UpdateNotStarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(RunningImage)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(FlashError)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(FlashIllegalRead)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(FlashReadFail)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(MissingHeaderBlock)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(InvalidHeaderBlock)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(ImageBoardMismatch)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(ImageBoardUnknown)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(NotImplemented)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(MissingHandoffData)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Sprockets(BadEncoding)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Sprockets(UnsupportedVersion)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Attest(CertTooBig))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Attest(InvalidCertIndex))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Attest(NoCerts))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Attest(OutOfRange))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Attest(LogFull))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Attest(LogTooBig))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Attest(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Attest(BadLease))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Attest(UnsupportedAlgorithm))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Attest(SerializeLog))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Attest(SerializeSignature))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Attest(SignatureTooBig))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Ok),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(InvalidCrc)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(FlowError)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(UnsupportedProtocol)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(BadMessageType)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(BadMessageLength)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(CannotAssertCSn)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(Timeout)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(Deserialization)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(RotIrqRemainsAsserted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(UnexpectedResponse)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(BadUpdateStatus)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(Desynchronized)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Spi(BadTransferSize)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Spi(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Spi(NothingToRelease)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Spi(BadDevice)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(BadLength)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(UpdateInProgress)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(OutOfBounds)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(EccDoubleErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(EccSingleErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(SecureErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(ReadProtErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(WriteEraseErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(InconsistencyErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(StrobeErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(ProgSeqErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(WriteProtErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(BadImageType)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(UpdateAlreadyFinished)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(UpdateNotStarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(RunningImage)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(FlashError)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(FlashIllegalRead)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(FlashReadFail)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(MissingHeaderBlock)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(InvalidHeaderBlock)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(ImageBoardMismatch)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(ImageBoardUnknown)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(NotImplemented)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(MissingHandoffData)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Sprockets(BadEncoding)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Sprockets(UnsupportedVersion)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Attest(CertTooBig))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Attest(InvalidCertIndex))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Attest(NoCerts))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Attest(OutOfRange))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Attest(LogFull))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Attest(LogTooBig))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Attest(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Attest(BadLease))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Attest(UnsupportedAlgorithm))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Attest(SerializeLog))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Attest(SerializeSignature))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Attest(SignatureTooBig))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Ok),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(InvalidCrc)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(FlowError)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(UnsupportedProtocol)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(BadMessageType)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(BadMessageLength)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(CannotAssertCSn)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(Timeout)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(Deserialization)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(RotIrqRemainsAsserted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(UnexpectedResponse)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(BadUpdateStatus)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(Desynchronized)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Spi(BadTransferSize)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Spi(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Spi(NothingToRelease)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Spi(BadDevice)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(BadLength)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(UpdateInProgress)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(OutOfBounds)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(EccDoubleErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(EccSingleErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(SecureErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(ReadProtErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(WriteEraseErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(InconsistencyErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(StrobeErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(ProgSeqErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(WriteProtErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(BadImageType)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(UpdateAlreadyFinished)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(UpdateNotStarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(RunningImage)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(FlashError)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(FlashIllegalRead)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(FlashReadFail)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(MissingHeaderBlock)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(InvalidHeaderBlock)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(ImageBoardMismatch)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(ImageBoardUnknown)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(NotImplemented)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(MissingHandoffData)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Sprockets(BadEncoding)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Sprockets(UnsupportedVersion)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Attest(CertTooBig))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Attest(InvalidCertIndex))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Attest(NoCerts))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Attest(OutOfRange))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Attest(LogFull))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Attest(LogTooBig))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Attest(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Attest(BadLease))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Attest(UnsupportedAlgorithm))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Attest(SerializeLog))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Attest(SerializeSignature))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Attest(SignatureTooBig))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Ok),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(InvalidCrc)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(FlowError)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(UnsupportedProtocol)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(BadMessageType)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(BadMessageLength)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(CannotAssertCSn)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(Timeout)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(Deserialization)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(RotIrqRemainsAsserted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(UnexpectedResponse)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(BadUpdateStatus)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(Desynchronized)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Spi(BadTransferSize)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Spi(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Spi(NothingToRelease)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Spi(BadDevice)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(BadLength)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(UpdateInProgress)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(OutOfBounds)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(EccDoubleErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(EccSingleErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(SecureErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(ReadProtErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(WriteEraseErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(InconsistencyErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(StrobeErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(ProgSeqErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(WriteProtErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(BadImageType)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(UpdateAlreadyFinished)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(UpdateNotStarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(RunningImage)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(FlashError)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(FlashIllegalRead)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(FlashReadFail)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(MissingHeaderBlock)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(InvalidHeaderBlock)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(ImageBoardMismatch)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(ImageBoardUnknown)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(NotImplemented)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(MissingHandoffData)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Sprockets(BadEncoding)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Sprockets(UnsupportedVersion)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Attest(CertTooBig))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Attest(InvalidCertIndex))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Attest(NoCerts))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Attest(OutOfRange))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Attest(LogFull))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Attest(LogTooBig))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Attest(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Attest(BadLease))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Attest(UnsupportedAlgorithm))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Attest(SerializeLog))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Attest(SerializeSignature))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Attest(SignatureTooBig))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Ok),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(InvalidCrc))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(FlowError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(UnsupportedProtocol))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(BadMessageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(BadMessageLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(CannotAssertCSn))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(Timeout))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(Deserialization))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(RotIrqRemainsAsserted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(UnexpectedResponse))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(BadUpdateStatus))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(Desynchronized))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Spi(BadTransferSize))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Spi(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Spi(NothingToRelease))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Spi(BadDevice))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(BadLength))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(UpdateInProgress))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(OutOfBounds))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(EccDoubleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(EccSingleErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(SecureErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(ReadProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(WriteEraseErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(InconsistencyErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(StrobeErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(ProgSeqErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(WriteProtErr))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(BadImageType))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(UpdateAlreadyFinished))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(UpdateNotStarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(RunningImage))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(FlashError))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(FlashIllegalRead))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(FlashReadFail))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(MissingHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(InvalidHeaderBlock))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(ImageBoardMismatch))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(ImageBoardUnknown))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(NotImplemented))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(MissingHandoffData))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Sprockets(BadEncoding))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Sprockets(UnsupportedVersion))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Ok),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(InvalidCrc)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(FlowError)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(UnsupportedProtocol)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(BadMessageType)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(BadMessageLength)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(CannotAssertCSn)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(Timeout)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(Deserialization)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(RotIrqRemainsAsserted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(UnexpectedResponse)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(BadUpdateStatus)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(Desynchronized)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Spi(BadTransferSize)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Spi(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Spi(NothingToRelease)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Spi(BadDevice)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(BadLength)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(UpdateInProgress)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(OutOfBounds)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(EccDoubleErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(EccSingleErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(SecureErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(ReadProtErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(WriteEraseErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(InconsistencyErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(StrobeErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(ProgSeqErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(WriteProtErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(BadImageType)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(UpdateAlreadyFinished)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(UpdateNotStarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(RunningImage)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(FlashError)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(FlashIllegalRead)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(FlashReadFail)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(MissingHeaderBlock)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(InvalidHeaderBlock)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(ImageBoardMismatch)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(ImageBoardUnknown)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(NotImplemented)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(MissingHandoffData)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Sprockets(BadEncoding)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Sprockets(UnsupportedVersion)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Attest(CertTooBig))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Attest(InvalidCertIndex))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Attest(NoCerts))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Attest(OutOfRange))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Attest(LogFull))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Attest(LogTooBig))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Attest(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Attest(BadLease))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Attest(UnsupportedAlgorithm))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Attest(SerializeLog))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Attest(SerializeSignature))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Attest(SignatureTooBig))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Ok),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(InvalidCrc)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(FlowError)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(UnsupportedProtocol)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(BadMessageType)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(BadMessageLength)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(CannotAssertCSn)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(Timeout)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(Deserialization)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(RotIrqRemainsAsserted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(UnexpectedResponse)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(BadUpdateStatus)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(Desynchronized)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Spi(BadTransferSize)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Spi(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Spi(NothingToRelease)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Spi(BadDevice)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(BadLength)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(UpdateInProgress)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(OutOfBounds)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(EccDoubleErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(EccSingleErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(SecureErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(ReadProtErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(WriteEraseErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(InconsistencyErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(StrobeErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(ProgSeqErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(WriteProtErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(BadImageType)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(UpdateAlreadyFinished)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(UpdateNotStarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(RunningImage)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(FlashError)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(FlashIllegalRead)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(FlashReadFail)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(MissingHeaderBlock)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(InvalidHeaderBlock)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(ImageBoardMismatch)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(ImageBoardUnknown)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(NotImplemented)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(MissingHandoffData)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Sprockets(BadEncoding)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Sprockets(UnsupportedVersion)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Attest(CertTooBig))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Attest(InvalidCertIndex))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Attest(NoCerts))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Attest(OutOfRange))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Attest(LogFull))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Attest(LogTooBig))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Attest(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Attest(BadLease))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Attest(UnsupportedAlgorithm))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Attest(SerializeLog))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Attest(SerializeSignature))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Attest(SignatureTooBig))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Ok),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(InvalidCrc)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(FlowError)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(UnsupportedProtocol)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(BadMessageType)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(BadMessageLength)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(CannotAssertCSn)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(Timeout)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(Deserialization)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(RotIrqRemainsAsserted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(UnexpectedResponse)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(BadUpdateStatus)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(Desynchronized)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Spi(BadTransferSize)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Spi(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Spi(NothingToRelease)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Spi(BadDevice)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(BadLength)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(UpdateInProgress)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(OutOfBounds)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(EccDoubleErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(EccSingleErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(SecureErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(ReadProtErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(WriteEraseErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(InconsistencyErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(StrobeErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(ProgSeqErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(WriteProtErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(BadImageType)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(UpdateAlreadyFinished)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(UpdateNotStarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(RunningImage)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(FlashError)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(FlashIllegalRead)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(FlashReadFail)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(MissingHeaderBlock)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(InvalidHeaderBlock)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(ImageBoardMismatch)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(ImageBoardUnknown)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(NotImplemented)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(MissingHandoffData)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Sprockets(BadEncoding)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Sprockets(UnsupportedVersion)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Attest(CertTooBig))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Attest(InvalidCertIndex))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Attest(NoCerts))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Attest(OutOfRange))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Attest(LogFull))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Attest(LogTooBig))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Attest(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Attest(BadLease))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Attest(UnsupportedAlgorithm))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Attest(SerializeLog))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Attest(SerializeSignature))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Attest(SignatureTooBig))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Ok),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(InvalidCrc)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(FlowError)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(UnsupportedProtocol)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(BadMessageType)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(BadMessageLength)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(CannotAssertCSn)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(Timeout)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(Deserialization)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(RotIrqRemainsAsserted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(UnexpectedResponse)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(BadUpdateStatus)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(Desynchronized)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Spi(BadTransferSize)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Spi(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Spi(NothingToRelease)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Spi(BadDevice)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(BadLength)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(UpdateInProgress)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(OutOfBounds)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(EccDoubleErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(EccSingleErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(SecureErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(ReadProtErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(WriteEraseErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(InconsistencyErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(StrobeErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(ProgSeqErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(WriteProtErr)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(BadImageType)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(UpdateAlreadyFinished)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(UpdateNotStarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(RunningImage)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(FlashError)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(FlashIllegalRead)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(FlashReadFail)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(MissingHeaderBlock)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(InvalidHeaderBlock)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(ImageBoardMismatch)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(ImageBoardUnknown)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(TaskRestarted)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(NotImplemented)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(MissingHandoffData)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Sprockets(BadEncoding)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Sprockets(UnsupportedVersion)))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Attest(CertTooBig))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Attest(InvalidCertIndex))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Attest(NoCerts))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Attest(OutOfRange))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Attest(LogFull))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Attest(LogTooBig))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Attest(TaskRestarted))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Attest(BadLease))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Attest(UnsupportedAlgorithm))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Attest(SerializeLog))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Attest(SerializeSignature))),0
control_plane_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Attest(SignatureTooBig))),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Ok),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(BadLength)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(UpdateInProgress)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(OutOfBounds)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(EccDoubleErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(EccSingleErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(SecureErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(ReadProtErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(WriteEraseErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(InconsistencyErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(StrobeErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(ProgSeqErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(WriteProtErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(BadImageType)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(UpdateAlreadyFinished)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(UpdateNotStarted)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(RunningImage)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(FlashError)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(FlashIllegalRead)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(FlashReadFail)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(MissingHeaderBlock)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(InvalidHeaderBlock)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(ImageBoardMismatch)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(ImageBoardUnknown)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(TaskRestarted)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(NotImplemented)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,block_size(Err(MissingHandoffData)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Ok),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(BadLength)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(UpdateInProgress)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(OutOfBounds)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(EccDoubleErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(EccSingleErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(SecureErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(ReadProtErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(WriteEraseErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(InconsistencyErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(StrobeErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(ProgSeqErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(WriteProtErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(BadImageType)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(UpdateAlreadyFinished)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(UpdateNotStarted)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(RunningImage)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(FlashError)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(FlashIllegalRead)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(FlashReadFail)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(MissingHeaderBlock)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(InvalidHeaderBlock)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(ImageBoardMismatch)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(ImageBoardUnknown)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(TaskRestarted)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(NotImplemented)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,prep_image_update(Err(MissingHandoffData)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Ok),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(BadLength)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(UpdateInProgress)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(OutOfBounds)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(EccDoubleErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(EccSingleErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(SecureErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(ReadProtErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(WriteEraseErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(InconsistencyErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(StrobeErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(ProgSeqErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(WriteProtErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(BadImageType)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(UpdateAlreadyFinished)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(UpdateNotStarted)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(RunningImage)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(FlashError)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(FlashIllegalRead)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(FlashReadFail)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(MissingHeaderBlock)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(InvalidHeaderBlock)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(ImageBoardMismatch)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(ImageBoardUnknown)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(TaskRestarted)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(NotImplemented)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,write_one_block(Err(MissingHandoffData)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Ok),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(BadLength)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(UpdateInProgress)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(OutOfBounds)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(EccDoubleErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(EccSingleErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(SecureErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(ReadProtErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(WriteEraseErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(InconsistencyErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(StrobeErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(ProgSeqErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(WriteProtErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(BadImageType)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(UpdateAlreadyFinished)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(UpdateNotStarted)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(RunningImage)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(FlashError)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(FlashIllegalRead)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(FlashReadFail)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(MissingHeaderBlock)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(InvalidHeaderBlock)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(ImageBoardMismatch)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(ImageBoardUnknown)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(TaskRestarted)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(NotImplemented)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,abort_update(Err(MissingHandoffData)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Ok),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(BadLength)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(UpdateInProgress)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(OutOfBounds)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(EccDoubleErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(EccSingleErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(SecureErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(ReadProtErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(WriteEraseErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(InconsistencyErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(StrobeErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(ProgSeqErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(WriteProtErr)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(BadImageType)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(UpdateAlreadyFinished)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(UpdateNotStarted)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(RunningImage)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(FlashError)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(FlashIllegalRead)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(FlashReadFail)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(MissingHeaderBlock)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(InvalidHeaderBlock)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(ImageBoardMismatch)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(ImageBoardUnknown)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(TaskRestarted)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(NotImplemented)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,finish_image_update(Err(MissingHandoffData)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,current_version,0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,read_caboose_value(Ok),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,read_caboose_value(Err(MissingCaboose)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,read_caboose_value(Err(TlvcReaderBeginFailed)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,read_caboose_value(Err(TlvcReadExactFailed)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,read_caboose_value(Err(NoSuchTag)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,read_caboose_value(Err(BadChecksum)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,read_caboose_value(Err(NoImageHeader)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,read_caboose_value(Err(RawReadFailed)),0
control_plane_agent,drv_stm32h7_update_api::__UPDATE_CLIENT_COUNTERS,read_caboose_value(Err(InvalidRead)),0
control_plane_agent,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enable_clock_raw(Ok),1
control_plane_agent,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enable_clock_raw(Err(NoSuchPeripheral)),0
control_plane_agent,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,disable_clock_raw(Ok),0
control_plane_agent,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,disable_clock_raw(Err(NoSuchPeripheral)),0
control_plane_agent,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enter_reset_raw(Ok),0
control_plane_agent,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enter_reset_raw(Err(NoSuchPeripheral)),0
control_plane_agent,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,leave_reset_raw(Ok),1
control_plane_agent,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,leave_reset_raw(Err(NoSuchPeripheral)),0
control_plane_agent,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_configure_raw,1
control_plane_agent,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_set_reset,0
control_plane_agent,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_read_input,0
control_plane_agent,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_toggle(Ok),0
control_plane_agent,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_toggle(Err),0
control_plane_agent,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,read_uid,0
control_plane_agent,drv_user_leds_api::__USERLEDS_CLIENT_COUNTERS,led_on(Ok),0
control_plane_agent,drv_user_leds_api::__USERLEDS_CLIENT_COUNTERS,led_on(Err(NotPresent)),0
control_plane_agent,drv_user_leds_api::__USERLEDS_CLIENT_COUNTERS,led_off(Ok),0
control_plane_agent,drv_user_leds_api::__USERLEDS_CLIENT_COUNTERS,led_off(Err(NotPresent)),0
control_plane_agent,drv_user_leds_api::__USERLEDS_CLIENT_COUNTERS,led_toggle(Ok),0
control_plane_agent,drv_user_leds_api::__USERLEDS_CLIENT_COUNTERS,led_toggle(Err(NotPresent)),0
control_plane_agent,drv_user_leds_api::__USERLEDS_CLIENT_COUNTERS,led_blink(Ok),0
control_plane_agent,drv_user_leds_api::__USERLEDS_CLIENT_COUNTERS,led_blink(Err(NotPresent)),0
control_plane_agent,task_control_plane_agent::CRITICAL,Empty,0
control_plane_agent,task_control_plane_agent::CRITICAL,SetPowerState,0
control_plane_agent,task_control_plane_agent::__RINGBUF,BarcodeParseError,0
control_plane_agent,task_control_plane_agent::__RINGBUF,Rx,0
control_plane_agent,task_control_plane_agent::__RINGBUF,SendError,0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(Discovery),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(IgnitionState),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(BulkIgnitionState),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(IgnitionLinkEvents),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(BulkIgnitionLinkEvents),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(ClearIgnitionLinkEvents),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(IgnitionCommand),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(SpState),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(SerialConsoleAttach),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(SerialConsoleWrite),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(SerialConsoleKeepAlive),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(SerialConsoleDetach),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(UpdatePrepare),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(UpdateChunk),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(UpdateStatus),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(UpdateAbort),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(GetPowerState),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(SetPowerState),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(Inventory),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(HostPhase2Data),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(MgsError),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(GetStartupOptions),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(SetStartupOptions),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(ComponentDetails),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(ComponentClearStatus),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(ComponentGetActiveSlot),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(ComponentSetActiveSlot),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(SerialConsoleBreak),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(SendHostNmi),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(SetIpccKeyValue),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(ReadRotPage),0
control_plane_agent,task_control_plane_agent::__RINGBUF,MgsMessage(VpdLockStatus),0
control_plane_agent,task_control_plane_agent::__RINGBUF,UsartTxFull,0
control_plane_agent,task_control_plane_agent::__RINGBUF,UsartRxOverrun,0
control_plane_agent,task_control_plane_agent::__RINGBUF,UsartRxBufferDataDropped,0
control_plane_agent,task_control_plane_agent::__RINGBUF,SerialConsoleSend,0
control_plane_agent,task_control_plane_agent::__RINGBUF,UpdatePartial,0
control_plane_agent,task_control_plane_agent::__RINGBUF,UpdateComplete,0
control_plane_agent,task_control_plane_agent::__RINGBUF,HostFlashSectorsErased,0
control_plane_agent,task_control_plane_agent::__RINGBUF,ExpectedRspTimeout,0
control_plane_agent,task_control_plane_agent::__RINGBUF,RotReset,0
control_plane_agent,task_control_plane_agent::__RINGBUF,SprotCabooseSize,0
control_plane_agent,task_control_plane_agent::__RINGBUF,ReadCaboose,0
control_plane_agent,task_control_plane_agent::__RINGBUF,GotCabooseChunk,0
control_plane_agent,task_control_plane_agent::__RINGBUF,ReadRotPage,0
control_plane_agent,task_control_plane_agent::__RINGBUF,IpcRequest(FetchHostPhase2Data),0
control_plane_agent,task_control_plane_agent::__RINGBUF,IpcRequest(GetHostPhase2Data),0
control_plane_agent,task_control_plane_agent::__RINGBUF,IpcRequest(GetStartupOptions),0
control_plane_agent,task_control_plane_agent::__RINGBUF,IpcRequest(SetStartupOptions),0
control_plane_agent,task_control_plane_agent::__RINGBUF,IpcRequest(Identity),0
control_plane_agent,task_control_plane_agent::__RINGBUF,IpcRequest(GetInstallinatorImageId),0
control_plane_agent,task_control_plane_agent::__RINGBUF,IpcRequest(GetUartClient),0
control_plane_agent,task_control_plane_agent::__RINGBUF,IpcRequest(SetHumilityUartClient(Mgs)),0
control_plane_agent,task_control_plane_agent::__RINGBUF,IpcRequest(SetHumilityUartClient(Humility)),0
control_plane_agent,task_control_plane_agent::__RINGBUF,IpcRequest(UartRead),510
control_plane_agent,task_control_plane_agent::__RINGBUF,IpcRequest(UartWrite),19
control_plane_agent,task_control_plane_agent::__RINGBUF,VpdLockStatus,0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_state,0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,set_state,0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,request_reset,0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_reset_reason,0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,set_reset_reason,0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Ok),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpAgentUnsupported)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(InvalidArea)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(BadOffset)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(UnalignedOffset)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(UnalignedSegmentAddress)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(UnalignedSegmentLength)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(BadDumpResponse)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(NotSupported)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpPresent)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(UnclaimedDumpArea)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(CannotClaimDumpArea)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpAreaInUse)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(BadSegmentAdd)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpMessageFailed)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailed)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedSetup)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedRead)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedWrite)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedControl)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedUnknown)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedUnknownError)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(ServerRestarted)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Ok),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpAgentUnsupported)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(InvalidArea)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(BadOffset)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(UnalignedOffset)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(UnalignedSegmentAddress)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(UnalignedSegmentLength)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(BadDumpResponse)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(NotSupported)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpPresent)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(UnclaimedDumpArea)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(CannotClaimDumpArea)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpAreaInUse)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(BadSegmentAdd)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpMessageFailed)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailed)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedSetup)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedRead)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedWrite)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedControl)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedUnknown)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedUnknownError)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(ServerRestarted)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Ok),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpAgentUnsupported)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(InvalidArea)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(BadOffset)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(UnalignedOffset)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(UnalignedSegmentAddress)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(UnalignedSegmentLength)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(BadDumpResponse)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(NotSupported)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpPresent)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(UnclaimedDumpArea)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(CannotClaimDumpArea)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpAreaInUse)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(BadSegmentAdd)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpMessageFailed)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailed)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedSetup)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedRead)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedWrite)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedControl)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedUnknown)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedUnknownError)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(ServerRestarted)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Ok),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpAgentUnsupported)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(InvalidArea)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(BadOffset)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(UnalignedOffset)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(UnalignedSegmentAddress)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(UnalignedSegmentLength)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(BadDumpResponse)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(NotSupported)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpPresent)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(UnclaimedDumpArea)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(CannotClaimDumpArea)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpAreaInUse)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(BadSegmentAdd)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpMessageFailed)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailed)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedSetup)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedRead)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedWrite)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedControl)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedUnknown)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedUnknownError)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(ServerRestarted)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Ok),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpAgentUnsupported)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(InvalidArea)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(BadOffset)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(UnalignedOffset)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(UnalignedSegmentAddress)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(UnalignedSegmentLength)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(BadDumpResponse)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(NotSupported)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpPresent)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(UnclaimedDumpArea)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(CannotClaimDumpArea)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpAreaInUse)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(BadSegmentAdd)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpMessageFailed)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailed)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedSetup)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedRead)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedWrite)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedControl)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedUnknown)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedUnknownError)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(ServerRestarted)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Ok),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpAgentUnsupported)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(InvalidArea)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(BadOffset)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(UnalignedOffset)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(UnalignedSegmentAddress)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(UnalignedSegmentLength)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(BadDumpResponse)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(NotSupported)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpPresent)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(UnclaimedDumpArea)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(CannotClaimDumpArea)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpAreaInUse)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(BadSegmentAdd)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpMessageFailed)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailed)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedSetup)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedRead)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedWrite)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedControl)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedUnknown)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedUnknownError)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(ServerRestarted)),0
control_plane_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,restart_me_raw,0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Ok),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Err(NotYours)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Err(QueueEmpty)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Err(Other)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Err(ServerRestarted)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Ok),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(NotYours)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(InvalidVLan)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(QueueFull)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(Other)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(ServerRestarted)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,smi_read(Ok),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,smi_read(Err),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,smi_write(Ok),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,smi_write(Err),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Ok),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Err(InvalidPort)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Err(NotImplemented)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Err(Other)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Err(ServerRestarted)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Ok),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Err(InvalidPort)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Err(NotImplemented)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Err(Other)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Err(ServerRestarted)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Ok),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(NotAvailable)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(BadMacIndex)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(BadRegister)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(WrongChipId)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(ServerRestarted)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Ok),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(NotAvailable)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(BadMacIndex)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(BadRegister)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(WrongChipId)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(ServerRestarted)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Ok),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(NotAvailable)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(BadMacIndex)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(BadRegister)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(WrongChipId)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(ServerRestarted)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,get_mac_address,1
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,get_spare_mac_addresses,0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Ok),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Err(NotAvailable)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Err(VscError)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Err(KszError)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Err(ServerRestarted)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Ok),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Err(NotAvailable)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Err(VscError)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Err(KszError)),0
control_plane_agent,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Err(ServerRestarted)),0
control_plane_agent,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_mac_address_block(Ok),0
control_plane_agent,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_mac_address_block(Err(ValueNotSet)),0
control_plane_agent,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_mac_address_block(Ok),0
control_plane_agent,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_mac_address_block(Err(ValueAlreadySet)),0
control_plane_agent,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_identity(Ok),0
control_plane_agent,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_identity(Err(ValueNotSet)),0
control_plane_agent,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_identity(Ok),0
control_plane_agent,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_identity(Err(ValueAlreadySet)),0
control_plane_agent,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_next_boot_host_startup_options,0
control_plane_agent,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_next_boot_host_startup_options,0
control_plane_agent,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_spd_eeprom,0
control_plane_agent,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_spd_present,0
control_plane_agent,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_spd_data,0
control_plane_agent,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_full_spd_data,0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Ok),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(InvalidSensor)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(NoReading)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(NotPresent)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(DeviceError)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(DeviceUnavailable)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(DeviceTimeout)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(DeviceOff)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Ok),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(InvalidSensor)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(NoReading)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(NotPresent)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(DeviceError)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(DeviceUnavailable)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(DeviceTimeout)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(DeviceOff)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_raw_reading(Ok),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_raw_reading(Err(InvalidSensor)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_raw_reading(Err(NoReading)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_last_data(Ok),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_last_data(Err(InvalidSensor)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_last_data(Err(NoReading)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_last_nodata(Ok),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_last_nodata(Err(InvalidSensor)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_last_nodata(Err(NoReading)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_min(Ok),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_min(Err(InvalidSensor)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_min(Err(NoReading)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_max(Ok),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_max(Err(InvalidSensor)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_max(Err(NoReading)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,post(Ok),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,post(Err(InvalidSensor)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,post(Err(NoReading)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,nodata(Ok),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,nodata(Err(InvalidSensor)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,nodata(Err(NoReading)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_nerrors(Ok),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_nerrors(Err(InvalidSensor)),0
control_plane_agent,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_nerrors(Err(NoReading)),0
control_plane_agent,task_validate_api::__VALIDATE_CLIENT_COUNTERS,validate_i2c(Ok),0
control_plane_agent,task_validate_api::__VALIDATE_CLIENT_COUNTERS,validate_i2c(Err(InvalidDevice)),0
control_plane_agent,task_validate_api::__VALIDATE_CLIENT_COUNTERS,validate_i2c(Err(BadValidation)),0
control_plane_agent,task_validate_api::__VALIDATE_CLIENT_COUNTERS,validate_i2c(Err(NotPresent)),0
control_plane_agent,task_validate_api::__VALIDATE_CLIENT_COUNTERS,validate_i2c(Err(DeviceError)),0
control_plane_agent,task_validate_api::__VALIDATE_CLIENT_COUNTERS,validate_i2c(Err(Unavailable)),0
control_plane_agent,task_validate_api::__VALIDATE_CLIENT_COUNTERS,validate_i2c(Err(DeviceTimeout)),0
control_plane_agent,task_validate_api::__VALIDATE_CLIENT_COUNTERS,validate_i2c(Err(DeviceOff)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read_tmp117_eeprom(Ok),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read_tmp117_eeprom(Err(InvalidDevice)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read_tmp117_eeprom(Err(NotPresent)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read_tmp117_eeprom(Err(DeviceError)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read_tmp117_eeprom(Err(Unavailable)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read_tmp117_eeprom(Err(DeviceTimeout)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read_tmp117_eeprom(Err(DeviceOff)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read_tmp117_eeprom(Err(BadAddress)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read_tmp117_eeprom(Err(BadBuffer)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read_tmp117_eeprom(Err(BadRead)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read_tmp117_eeprom(Err(BadWrite)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read_tmp117_eeprom(Err(BadLock)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read_tmp117_eeprom(Err(NotImplemented)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read_tmp117_eeprom(Err(IsLocked)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read_tmp117_eeprom(Err(PartiallyLocked)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read_tmp117_eeprom(Err(AlreadyLocked)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read_tmp117_eeprom(Err(ServerRestarted)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read(Ok),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read(Err(InvalidDevice)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read(Err(NotPresent)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read(Err(DeviceError)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read(Err(Unavailable)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read(Err(DeviceTimeout)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read(Err(DeviceOff)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read(Err(BadAddress)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read(Err(BadBuffer)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read(Err(BadRead)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read(Err(BadWrite)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read(Err(BadLock)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read(Err(NotImplemented)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read(Err(IsLocked)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read(Err(PartiallyLocked)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read(Err(AlreadyLocked)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,read(Err(ServerRestarted)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,write(Ok),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,write(Err(InvalidDevice)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,write(Err(NotPresent)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,write(Err(DeviceError)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,write(Err(Unavailable)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,write(Err(DeviceTimeout)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,write(Err(DeviceOff)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,write(Err(BadAddress)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,write(Err(BadBuffer)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,write(Err(BadRead)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,write(Err(BadWrite)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,write(Err(BadLock)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,write(Err(NotImplemented)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,write(Err(IsLocked)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,write(Err(PartiallyLocked)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,write(Err(AlreadyLocked)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,write(Err(ServerRestarted)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,is_locked(Ok),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,is_locked(Err(InvalidDevice)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,is_locked(Err(NotPresent)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,is_locked(Err(DeviceError)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,is_locked(Err(Unavailable)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,is_locked(Err(DeviceTimeout)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,is_locked(Err(DeviceOff)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,is_locked(Err(BadAddress)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,is_locked(Err(BadBuffer)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,is_locked(Err(BadRead)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,is_locked(Err(BadWrite)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,is_locked(Err(BadLock)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,is_locked(Err(NotImplemented)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,is_locked(Err(IsLocked)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,is_locked(Err(PartiallyLocked)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,is_locked(Err(AlreadyLocked)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,is_locked(Err(ServerRestarted)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,permanently_lock(Ok),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,permanently_lock(Err(InvalidDevice)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,permanently_lock(Err(NotPresent)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,permanently_lock(Err(DeviceError)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,permanently_lock(Err(Unavailable)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,permanently_lock(Err(DeviceTimeout)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,permanently_lock(Err(DeviceOff)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,permanently_lock(Err(BadAddress)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,permanently_lock(Err(BadBuffer)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,permanently_lock(Err(BadRead)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,permanently_lock(Err(BadWrite)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,permanently_lock(Err(BadLock)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,permanently_lock(Err(NotImplemented)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,permanently_lock(Err(IsLocked)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,permanently_lock(Err(PartiallyLocked)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,permanently_lock(Err(AlreadyLocked)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,permanently_lock(Err(ServerRestarted)),0
control_plane_agent,task_vpd_api::__VPD_CLIENT_COUNTERS,num_vpd_devices,0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Ok),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(InvalidCrc))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(FlowError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(UnsupportedProtocol))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(BadMessageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(BadMessageLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(CannotAssertCSn))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(Timeout))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(Deserialization))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(RotIrqRemainsAsserted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(UnexpectedResponse))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(BadUpdateStatus))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Protocol(Desynchronized))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Spi(BadTransferSize))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Spi(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Spi(NothingToRelease))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Spi(BadDevice))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(BadLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(UpdateInProgress))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(OutOfBounds))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(EccDoubleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(EccSingleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(SecureErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(ReadProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(WriteEraseErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(InconsistencyErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(StrobeErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(ProgSeqErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(WriteProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(BadImageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(UpdateAlreadyFinished))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(UpdateNotStarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(RunningImage))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(FlashError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(FlashIllegalRead))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(FlashReadFail))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(MissingHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(InvalidHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(ImageBoardMismatch))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(ImageBoardUnknown))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(NotImplemented))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Update(MissingHandoffData))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Sprockets(BadEncoding))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,status(Err(Sprockets(UnsupportedVersion))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Ok),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(InvalidCrc))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(FlowError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(UnsupportedProtocol))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(BadMessageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(BadMessageLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(CannotAssertCSn))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(Timeout))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(Deserialization))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(RotIrqRemainsAsserted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(UnexpectedResponse))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(BadUpdateStatus))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Protocol(Desynchronized))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Spi(BadTransferSize))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Spi(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Spi(NothingToRelease))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Spi(BadDevice))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(BadLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(UpdateInProgress))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(OutOfBounds))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(EccDoubleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(EccSingleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(SecureErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(ReadProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(WriteEraseErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(InconsistencyErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(StrobeErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(ProgSeqErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(WriteProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(BadImageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(UpdateAlreadyFinished))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(UpdateNotStarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(RunningImage))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(FlashError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(FlashIllegalRead))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(FlashReadFail))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(MissingHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(InvalidHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(ImageBoardMismatch))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(ImageBoardUnknown))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(NotImplemented))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Update(MissingHandoffData))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Sprockets(BadEncoding))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,io_stats(Err(Sprockets(UnsupportedVersion))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Ok),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(InvalidCrc))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(FlowError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(UnsupportedProtocol))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(BadMessageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(BadMessageLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(CannotAssertCSn))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(Timeout))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(Deserialization))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(RotIrqRemainsAsserted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(UnexpectedResponse))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(BadUpdateStatus))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Protocol(Desynchronized))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Spi(BadTransferSize))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Spi(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Spi(NothingToRelease))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Spi(BadDevice))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(BadLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(UpdateInProgress))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(OutOfBounds))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(EccDoubleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(EccSingleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(SecureErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(ReadProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(WriteEraseErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(InconsistencyErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(StrobeErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(ProgSeqErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(WriteProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(BadImageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(UpdateAlreadyFinished))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(UpdateNotStarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(RunningImage))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(FlashError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(FlashIllegalRead))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(FlashReadFail))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(MissingHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(InvalidHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(ImageBoardMismatch))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(ImageBoardUnknown))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(NotImplemented))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Update(MissingHandoffData))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Sprockets(BadEncoding))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_state(Err(Sprockets(UnsupportedVersion))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Ok),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(InvalidCrc))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(FlowError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(UnsupportedProtocol))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(BadMessageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(BadMessageLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(CannotAssertCSn))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(Timeout))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(Deserialization))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(RotIrqRemainsAsserted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(UnexpectedResponse))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(BadUpdateStatus))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Protocol(Desynchronized))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Spi(BadTransferSize))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Spi(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Spi(NothingToRelease))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Spi(BadDevice))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(BadLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(UpdateInProgress))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(OutOfBounds))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(EccDoubleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(EccSingleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(SecureErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(ReadProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(WriteEraseErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(InconsistencyErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(StrobeErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(ProgSeqErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(WriteProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(BadImageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(UpdateAlreadyFinished))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(UpdateNotStarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(RunningImage))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(FlashError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(FlashIllegalRead))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(FlashReadFail))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(MissingHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(InvalidHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(ImageBoardMismatch))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(ImageBoardUnknown))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(NotImplemented))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Update(MissingHandoffData))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Sprockets(BadEncoding))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,pulse_cs(Err(Sprockets(UnsupportedVersion))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Ok),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(InvalidCrc))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(FlowError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(UnsupportedProtocol))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(BadMessageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(BadMessageLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(CannotAssertCSn))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(Timeout))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(Deserialization))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(RotIrqRemainsAsserted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(UnexpectedResponse))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(BadUpdateStatus))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Protocol(Desynchronized))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Spi(BadTransferSize))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Spi(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Spi(NothingToRelease))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Spi(BadDevice))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(BadLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(UpdateInProgress))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(OutOfBounds))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(EccDoubleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(EccSingleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(SecureErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(ReadProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(WriteEraseErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(InconsistencyErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(StrobeErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(ProgSeqErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(WriteProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(BadImageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(UpdateAlreadyFinished))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(UpdateNotStarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(RunningImage))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(FlashError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(FlashIllegalRead))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(FlashReadFail))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(MissingHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(InvalidHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(ImageBoardMismatch))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(ImageBoardUnknown))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(NotImplemented))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Update(MissingHandoffData))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Sprockets(BadEncoding))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,block_size(Err(Sprockets(UnsupportedVersion))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Ok),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(InvalidCrc))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(FlowError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(UnsupportedProtocol))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(BadMessageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(BadMessageLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(CannotAssertCSn))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(Timeout))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(Deserialization))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(RotIrqRemainsAsserted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(UnexpectedResponse))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(BadUpdateStatus))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Protocol(Desynchronized))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Spi(BadTransferSize))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Spi(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Spi(NothingToRelease))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Spi(BadDevice))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(BadLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(UpdateInProgress))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(OutOfBounds))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(EccDoubleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(EccSingleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(SecureErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(ReadProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(WriteEraseErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(InconsistencyErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(StrobeErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(ProgSeqErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(WriteProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(BadImageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(UpdateAlreadyFinished))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(UpdateNotStarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(RunningImage))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(FlashError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(FlashIllegalRead))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(FlashReadFail))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(MissingHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(InvalidHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(ImageBoardMismatch))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(ImageBoardUnknown))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(NotImplemented))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Update(MissingHandoffData))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Sprockets(BadEncoding))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,prep_image_update(Err(Sprockets(UnsupportedVersion))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Ok),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(InvalidCrc))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(FlowError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(UnsupportedProtocol))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(BadMessageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(BadMessageLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(CannotAssertCSn))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(Timeout))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(Deserialization))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(RotIrqRemainsAsserted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(UnexpectedResponse))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(BadUpdateStatus))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Protocol(Desynchronized))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Spi(BadTransferSize))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Spi(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Spi(NothingToRelease))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Spi(BadDevice))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(BadLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(UpdateInProgress))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(OutOfBounds))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(EccDoubleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(EccSingleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(SecureErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(ReadProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(WriteEraseErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(InconsistencyErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(StrobeErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(ProgSeqErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(WriteProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(BadImageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(UpdateAlreadyFinished))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(UpdateNotStarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(RunningImage))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(FlashError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(FlashIllegalRead))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(FlashReadFail))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(MissingHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(InvalidHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(ImageBoardMismatch))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(ImageBoardUnknown))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(NotImplemented))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Update(MissingHandoffData))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Sprockets(BadEncoding))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,write_one_block(Err(Sprockets(UnsupportedVersion))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Ok),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(InvalidCrc))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(FlowError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(UnsupportedProtocol))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(BadMessageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(BadMessageLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(CannotAssertCSn))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(Timeout))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(Deserialization))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(RotIrqRemainsAsserted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(UnexpectedResponse))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(BadUpdateStatus))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Protocol(Desynchronized))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Spi(BadTransferSize))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Spi(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Spi(NothingToRelease))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Spi(BadDevice))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(BadLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(UpdateInProgress))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(OutOfBounds))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(EccDoubleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(EccSingleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(SecureErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(ReadProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(WriteEraseErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(InconsistencyErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(StrobeErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(ProgSeqErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(WriteProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(BadImageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(UpdateAlreadyFinished))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(UpdateNotStarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(RunningImage))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(FlashError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(FlashIllegalRead))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(FlashReadFail))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(MissingHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(InvalidHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(ImageBoardMismatch))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(ImageBoardUnknown))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(NotImplemented))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Update(MissingHandoffData))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Sprockets(BadEncoding))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,abort_update(Err(Sprockets(UnsupportedVersion))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Ok),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(InvalidCrc))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(FlowError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(UnsupportedProtocol))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(BadMessageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(BadMessageLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(CannotAssertCSn))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(Timeout))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(Deserialization))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(RotIrqRemainsAsserted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(UnexpectedResponse))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(BadUpdateStatus))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Protocol(Desynchronized))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Spi(BadTransferSize))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Spi(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Spi(NothingToRelease))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Spi(BadDevice))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(BadLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(UpdateInProgress))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(OutOfBounds))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(EccDoubleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(EccSingleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(SecureErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(ReadProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(WriteEraseErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(InconsistencyErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(StrobeErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(ProgSeqErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(WriteProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(BadImageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(UpdateAlreadyFinished))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(UpdateNotStarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(RunningImage))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(FlashError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(FlashIllegalRead))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(FlashReadFail))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(MissingHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(InvalidHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(ImageBoardMismatch))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(ImageBoardUnknown))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(NotImplemented))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Update(MissingHandoffData))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Sprockets(BadEncoding))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,finish_image_update(Err(Sprockets(UnsupportedVersion))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Ok),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(InvalidCrc))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(FlowError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(UnsupportedProtocol))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(BadMessageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(BadMessageLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(CannotAssertCSn))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(Timeout))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(Deserialization))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(RotIrqRemainsAsserted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(UnexpectedResponse))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(BadUpdateStatus))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Protocol(Desynchronized))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Spi(BadTransferSize))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Spi(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Spi(NothingToRelease))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Spi(BadDevice))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(BadLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(UpdateInProgress))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(OutOfBounds))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(EccDoubleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(EccSingleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(SecureErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(ReadProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(WriteEraseErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(InconsistencyErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(StrobeErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(ProgSeqErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(WriteProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(BadImageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(UpdateAlreadyFinished))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(UpdateNotStarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(RunningImage))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(FlashError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(FlashIllegalRead))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(FlashReadFail))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(MissingHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(InvalidHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(ImageBoardMismatch))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(ImageBoardUnknown))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(NotImplemented))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Update(MissingHandoffData))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Sprockets(BadEncoding))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,switch_default_image(Err(Sprockets(UnsupportedVersion))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Ok),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(InvalidCrc))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(FlowError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(UnsupportedProtocol))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(BadMessageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(BadMessageLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(CannotAssertCSn))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(Timeout))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(Deserialization))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(RotIrqRemainsAsserted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(UnexpectedResponse))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(BadUpdateStatus))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Protocol(Desynchronized))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Spi(BadTransferSize))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Spi(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Spi(NothingToRelease))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Spi(BadDevice))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(BadLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(UpdateInProgress))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(OutOfBounds))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(EccDoubleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(EccSingleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(SecureErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(ReadProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(WriteEraseErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(InconsistencyErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(StrobeErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(ProgSeqErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(WriteProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(BadImageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(UpdateAlreadyFinished))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(UpdateNotStarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(RunningImage))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(FlashError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(FlashIllegalRead))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(FlashReadFail))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(MissingHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(InvalidHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(ImageBoardMismatch))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(ImageBoardUnknown))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(NotImplemented))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Update(MissingHandoffData))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Sprockets(BadEncoding))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,reset(Err(Sprockets(UnsupportedVersion))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Ok),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(InvalidCrc)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(FlowError)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(UnsupportedProtocol)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(BadMessageType)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(BadMessageLength)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(CannotAssertCSn)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(Timeout)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(Deserialization)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(RotIrqRemainsAsserted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(UnexpectedResponse)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(BadUpdateStatus)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Protocol(Desynchronized)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Spi(BadTransferSize)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Spi(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Spi(NothingToRelease)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Spi(BadDevice)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(BadLength)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(UpdateInProgress)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(OutOfBounds)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(EccDoubleErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(EccSingleErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(SecureErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(ReadProtErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(WriteEraseErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(InconsistencyErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(StrobeErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(ProgSeqErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(WriteProtErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(BadImageType)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(UpdateAlreadyFinished)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(UpdateNotStarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(RunningImage)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(FlashError)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(FlashIllegalRead)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(FlashReadFail)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(MissingHeaderBlock)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(InvalidHeaderBlock)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(ImageBoardMismatch)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(ImageBoardUnknown)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(NotImplemented)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Update(MissingHandoffData)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Sprockets(BadEncoding)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Sprot(Sprockets(UnsupportedVersion)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,dump(Err(Dump)),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Ok),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(InvalidCrc)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(FlowError)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(UnsupportedProtocol)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(BadMessageType)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(BadMessageLength)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(CannotAssertCSn)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(Timeout)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(Deserialization)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(RotIrqRemainsAsserted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(UnexpectedResponse)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(BadUpdateStatus)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Protocol(Desynchronized)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Spi(BadTransferSize)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Spi(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Spi(NothingToRelease)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Spi(BadDevice)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(BadLength)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(UpdateInProgress)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(OutOfBounds)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(EccDoubleErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(EccSingleErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(SecureErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(ReadProtErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(WriteEraseErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(InconsistencyErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(StrobeErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(ProgSeqErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(WriteProtErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(BadImageType)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(UpdateAlreadyFinished)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(UpdateNotStarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(RunningImage)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(FlashError)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(FlashIllegalRead)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(FlashReadFail)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(MissingHeaderBlock)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(InvalidHeaderBlock)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(ImageBoardMismatch)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(ImageBoardUnknown)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(NotImplemented)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Update(MissingHandoffData)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Sprockets(BadEncoding)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Sprot(Sprockets(UnsupportedVersion)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Caboose(InvalidRead))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Caboose(ReadFailed))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Caboose(MissingCaboose))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,caboose_size(Err(Caboose(NoImageHeader))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Ok),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(InvalidCrc)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(FlowError)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(UnsupportedProtocol)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(BadMessageType)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(BadMessageLength)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(CannotAssertCSn)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(Timeout)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(Deserialization)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(RotIrqRemainsAsserted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(UnexpectedResponse)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(BadUpdateStatus)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Protocol(Desynchronized)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Spi(BadTransferSize)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Spi(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Spi(NothingToRelease)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Spi(BadDevice)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(BadLength)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(UpdateInProgress)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(OutOfBounds)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(EccDoubleErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(EccSingleErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(SecureErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(ReadProtErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(WriteEraseErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(InconsistencyErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(StrobeErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(ProgSeqErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(WriteProtErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(BadImageType)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(UpdateAlreadyFinished)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(UpdateNotStarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(RunningImage)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(FlashError)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(FlashIllegalRead)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(FlashReadFail)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(MissingHeaderBlock)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(InvalidHeaderBlock)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(ImageBoardMismatch)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(ImageBoardUnknown)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(NotImplemented)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Update(MissingHandoffData)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Sprockets(BadEncoding)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Sprot(Sprockets(UnsupportedVersion)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Caboose(InvalidRead))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Caboose(ReadFailed))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Caboose(MissingCaboose))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_caboose_region(Err(Caboose(NoImageHeader))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Ok),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(InvalidCrc))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(FlowError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(UnsupportedProtocol))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(BadMessageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(BadMessageLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(CannotAssertCSn))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(Timeout))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(Deserialization))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(RotIrqRemainsAsserted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(UnexpectedResponse))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(BadUpdateStatus))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Protocol(Desynchronized))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Spi(BadTransferSize))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Spi(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Spi(NothingToRelease))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Spi(BadDevice))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(BadLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(UpdateInProgress))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(OutOfBounds))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(EccDoubleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(EccSingleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(SecureErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(ReadProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(WriteEraseErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(InconsistencyErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(StrobeErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(ProgSeqErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(WriteProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(BadImageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(UpdateAlreadyFinished))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(UpdateNotStarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(RunningImage))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(FlashError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(FlashIllegalRead))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(FlashReadFail))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(MissingHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(InvalidHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(ImageBoardMismatch))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(ImageBoardUnknown))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(NotImplemented))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Update(MissingHandoffData))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Sprockets(BadEncoding))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,rot_boot_info(Err(Sprockets(UnsupportedVersion))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Ok),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(InvalidCrc)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(FlowError)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(UnsupportedProtocol)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(BadMessageType)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(BadMessageLength)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(CannotAssertCSn)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(Timeout)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(Deserialization)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(RotIrqRemainsAsserted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(UnexpectedResponse)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(BadUpdateStatus)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Protocol(Desynchronized)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Spi(BadTransferSize)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Spi(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Spi(NothingToRelease)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Spi(BadDevice)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(BadLength)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(UpdateInProgress)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(OutOfBounds)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(EccDoubleErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(EccSingleErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(SecureErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(ReadProtErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(WriteEraseErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(InconsistencyErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(StrobeErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(ProgSeqErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(WriteProtErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(BadImageType)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(UpdateAlreadyFinished)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(UpdateNotStarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(RunningImage)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(FlashError)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(FlashIllegalRead)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(FlashReadFail)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(MissingHeaderBlock)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(InvalidHeaderBlock)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(ImageBoardMismatch)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(ImageBoardUnknown)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(NotImplemented)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Update(MissingHandoffData)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Sprockets(BadEncoding)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Sprot(Sprockets(UnsupportedVersion)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Attest(CertTooBig))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Attest(InvalidCertIndex))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Attest(NoCerts))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Attest(OutOfRange))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Attest(LogFull))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Attest(LogTooBig))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Attest(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Attest(BadLease))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Attest(UnsupportedAlgorithm))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Attest(SerializeLog))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Attest(SerializeSignature))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_chain_len(Err(Attest(SignatureTooBig))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Ok),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(InvalidCrc)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(FlowError)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(UnsupportedProtocol)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(BadMessageType)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(BadMessageLength)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(CannotAssertCSn)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(Timeout)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(Deserialization)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(RotIrqRemainsAsserted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(UnexpectedResponse)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(BadUpdateStatus)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Protocol(Desynchronized)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Spi(BadTransferSize)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Spi(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Spi(NothingToRelease)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Spi(BadDevice)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(BadLength)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(UpdateInProgress)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(OutOfBounds)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(EccDoubleErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(EccSingleErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(SecureErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(ReadProtErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(WriteEraseErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(InconsistencyErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(StrobeErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(ProgSeqErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(WriteProtErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(BadImageType)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(UpdateAlreadyFinished)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(UpdateNotStarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(RunningImage)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(FlashError)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(FlashIllegalRead)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(FlashReadFail)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(MissingHeaderBlock)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(InvalidHeaderBlock)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(ImageBoardMismatch)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(ImageBoardUnknown)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(NotImplemented)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Update(MissingHandoffData)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Sprockets(BadEncoding)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Sprot(Sprockets(UnsupportedVersion)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Attest(CertTooBig))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Attest(InvalidCertIndex))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Attest(NoCerts))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Attest(OutOfRange))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Attest(LogFull))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Attest(LogTooBig))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Attest(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Attest(BadLease))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Attest(UnsupportedAlgorithm))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Attest(SerializeLog))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Attest(SerializeSignature))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert_len(Err(Attest(SignatureTooBig))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Ok),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(InvalidCrc)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(FlowError)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(UnsupportedProtocol)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(BadMessageType)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(BadMessageLength)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(CannotAssertCSn)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(Timeout)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(Deserialization)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(RotIrqRemainsAsserted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(UnexpectedResponse)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(BadUpdateStatus)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Protocol(Desynchronized)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Spi(BadTransferSize)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Spi(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Spi(NothingToRelease)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Spi(BadDevice)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(BadLength)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(UpdateInProgress)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(OutOfBounds)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(EccDoubleErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(EccSingleErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(SecureErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(ReadProtErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(WriteEraseErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(InconsistencyErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(StrobeErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(ProgSeqErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(WriteProtErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(BadImageType)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(UpdateAlreadyFinished)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(UpdateNotStarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(RunningImage)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(FlashError)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(FlashIllegalRead)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(FlashReadFail)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(MissingHeaderBlock)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(InvalidHeaderBlock)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(ImageBoardMismatch)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(ImageBoardUnknown)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(NotImplemented)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Update(MissingHandoffData)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Sprockets(BadEncoding)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Sprot(Sprockets(UnsupportedVersion)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Attest(CertTooBig))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Attest(InvalidCertIndex))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Attest(NoCerts))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Attest(OutOfRange))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Attest(LogFull))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Attest(LogTooBig))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Attest(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Attest(BadLease))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Attest(UnsupportedAlgorithm))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Attest(SerializeLog))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Attest(SerializeSignature))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,cert(Err(Attest(SignatureTooBig))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Ok),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(InvalidCrc)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(FlowError)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(UnsupportedProtocol)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(BadMessageType)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(BadMessageLength)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(CannotAssertCSn)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(Timeout)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(Deserialization)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(RotIrqRemainsAsserted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(UnexpectedResponse)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(BadUpdateStatus)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Protocol(Desynchronized)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Spi(BadTransferSize)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Spi(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Spi(NothingToRelease)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Spi(BadDevice)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(BadLength)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(UpdateInProgress)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(OutOfBounds)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(EccDoubleErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(EccSingleErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(SecureErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(ReadProtErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(WriteEraseErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(InconsistencyErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(StrobeErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(ProgSeqErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(WriteProtErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(BadImageType)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(UpdateAlreadyFinished)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(UpdateNotStarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(RunningImage)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(FlashError)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(FlashIllegalRead)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(FlashReadFail)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(MissingHeaderBlock)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(InvalidHeaderBlock)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(ImageBoardMismatch)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(ImageBoardUnknown)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(NotImplemented)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Update(MissingHandoffData)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Sprockets(BadEncoding)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Sprot(Sprockets(UnsupportedVersion)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Attest(CertTooBig))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Attest(InvalidCertIndex))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Attest(NoCerts))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Attest(OutOfRange))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Attest(LogFull))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Attest(LogTooBig))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Attest(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Attest(BadLease))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Attest(UnsupportedAlgorithm))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Attest(SerializeLog))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Attest(SerializeSignature))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,record(Err(Attest(SignatureTooBig))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Ok),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(InvalidCrc))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(FlowError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(UnsupportedProtocol))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(BadMessageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(BadMessageLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(CannotAssertCSn))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(Timeout))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(Deserialization))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(RotIrqRemainsAsserted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(UnexpectedResponse))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(BadUpdateStatus))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Protocol(Desynchronized))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Spi(BadTransferSize))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Spi(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Spi(NothingToRelease))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Spi(BadDevice))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(BadLength))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(UpdateInProgress))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(OutOfBounds))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(EccDoubleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(EccSingleErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(SecureErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(ReadProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(WriteEraseErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(InconsistencyErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(StrobeErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(ProgSeqErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(WriteProtErr))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(BadImageType))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(UpdateAlreadyFinished))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(UpdateNotStarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(RunningImage))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(FlashError))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(FlashIllegalRead))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(FlashReadFail))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(MissingHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(InvalidHeaderBlock))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(ImageBoardMismatch))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(ImageBoardUnknown))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(NotImplemented))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Update(MissingHandoffData))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Sprockets(BadEncoding))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,read_rot_page(Err(Sprockets(UnsupportedVersion))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Ok),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(InvalidCrc)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(FlowError)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(UnsupportedProtocol)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(BadMessageType)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(BadMessageLength)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(CannotAssertCSn)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(Timeout)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(Deserialization)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(RotIrqRemainsAsserted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(UnexpectedResponse)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(BadUpdateStatus)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Protocol(Desynchronized)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Spi(BadTransferSize)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Spi(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Spi(NothingToRelease)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Spi(BadDevice)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(BadLength)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(UpdateInProgress)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(OutOfBounds)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(EccDoubleErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(EccSingleErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(SecureErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(ReadProtErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(WriteEraseErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(InconsistencyErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(StrobeErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(ProgSeqErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(WriteProtErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(BadImageType)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(UpdateAlreadyFinished)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(UpdateNotStarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(RunningImage)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(FlashError)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(FlashIllegalRead)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(FlashReadFail)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(MissingHeaderBlock)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(InvalidHeaderBlock)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(ImageBoardMismatch)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(ImageBoardUnknown)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(NotImplemented)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Update(MissingHandoffData)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Sprockets(BadEncoding)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Sprot(Sprockets(UnsupportedVersion)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Attest(CertTooBig))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Attest(InvalidCertIndex))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Attest(NoCerts))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Attest(OutOfRange))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Attest(LogFull))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Attest(LogTooBig))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Attest(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Attest(BadLease))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Attest(UnsupportedAlgorithm))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Attest(SerializeLog))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Attest(SerializeSignature))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log(Err(Attest(SignatureTooBig))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Ok),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(InvalidCrc)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(FlowError)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(UnsupportedProtocol)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(BadMessageType)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(BadMessageLength)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(CannotAssertCSn)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(Timeout)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(Deserialization)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(RotIrqRemainsAsserted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(UnexpectedResponse)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(BadUpdateStatus)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Protocol(Desynchronized)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Spi(BadTransferSize)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Spi(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Spi(NothingToRelease)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Spi(BadDevice)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(BadLength)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(UpdateInProgress)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(OutOfBounds)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(EccDoubleErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(EccSingleErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(SecureErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(ReadProtErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(WriteEraseErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(InconsistencyErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(StrobeErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(ProgSeqErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(WriteProtErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(BadImageType)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(UpdateAlreadyFinished)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(UpdateNotStarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(RunningImage)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(FlashError)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(FlashIllegalRead)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(FlashReadFail)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(MissingHeaderBlock)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(InvalidHeaderBlock)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(ImageBoardMismatch)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(ImageBoardUnknown)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(NotImplemented)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Update(MissingHandoffData)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Sprockets(BadEncoding)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Sprot(Sprockets(UnsupportedVersion)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Attest(CertTooBig))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Attest(InvalidCertIndex))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Attest(NoCerts))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Attest(OutOfRange))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Attest(LogFull))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Attest(LogTooBig))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Attest(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Attest(BadLease))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Attest(UnsupportedAlgorithm))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Attest(SerializeLog))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Attest(SerializeSignature))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,log_len(Err(Attest(SignatureTooBig))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Ok),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(InvalidCrc)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(FlowError)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(UnsupportedProtocol)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(BadMessageType)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(BadMessageLength)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(CannotAssertCSn)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(Timeout)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(Deserialization)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(RotIrqRemainsAsserted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(UnexpectedResponse)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(BadUpdateStatus)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Protocol(Desynchronized)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Spi(BadTransferSize)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Spi(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Spi(NothingToRelease)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Spi(BadDevice)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(BadLength)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(UpdateInProgress)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(OutOfBounds)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(EccDoubleErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(EccSingleErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(SecureErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(ReadProtErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(WriteEraseErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(InconsistencyErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(StrobeErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(ProgSeqErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(WriteProtErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(BadImageType)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(UpdateAlreadyFinished)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(UpdateNotStarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(RunningImage)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(FlashError)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(FlashIllegalRead)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(FlashReadFail)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(MissingHeaderBlock)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(InvalidHeaderBlock)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(ImageBoardMismatch)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(ImageBoardUnknown)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(NotImplemented)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Update(MissingHandoffData)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Sprockets(BadEncoding)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Sprot(Sprockets(UnsupportedVersion)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Attest(CertTooBig))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Attest(InvalidCertIndex))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Attest(NoCerts))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Attest(OutOfRange))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Attest(LogFull))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Attest(LogTooBig))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Attest(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Attest(BadLease))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Attest(UnsupportedAlgorithm))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Attest(SerializeLog))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Attest(SerializeSignature))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest(Err(Attest(SignatureTooBig))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Ok),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(InvalidCrc)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(FlowError)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(UnsupportedProtocol)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(BadMessageType)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(BadMessageLength)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(CannotAssertCSn)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(Timeout)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(Deserialization)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(RotIrqRemainsAsserted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(UnexpectedResponse)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(BadUpdateStatus)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Protocol(Desynchronized)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Spi(BadTransferSize)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Spi(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Spi(NothingToRelease)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Spi(BadDevice)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(BadLength)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(UpdateInProgress)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(OutOfBounds)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(EccDoubleErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(EccSingleErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(SecureErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(ReadProtErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(WriteEraseErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(InconsistencyErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(StrobeErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(ProgSeqErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(WriteProtErr)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(BadImageType)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(UpdateAlreadyFinished)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(UpdateNotStarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(RunningImage)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(FlashError)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(FlashIllegalRead)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(FlashReadFail)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(MissingHeaderBlock)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(InvalidHeaderBlock)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(ImageBoardMismatch)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(ImageBoardUnknown)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(TaskRestarted)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(NotImplemented)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Update(MissingHandoffData)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Sprockets(BadEncoding)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Sprot(Sprockets(UnsupportedVersion)))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Attest(CertTooBig))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Attest(InvalidCertIndex))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Attest(NoCerts))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Attest(OutOfRange))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Attest(LogFull))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Attest(LogTooBig))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Attest(TaskRestarted))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Attest(BadLease))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Attest(UnsupportedAlgorithm))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Attest(SerializeLog))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Attest(SerializeSignature))),0
dump_agent,drv_sprot_api::__SPROT_CLIENT_COUNTERS,attest_len(Err(Attest(SignatureTooBig))),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_state,0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,set_state,0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,request_reset,0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_reset_reason,0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,set_reset_reason,0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Ok),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpAgentUnsupported)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(InvalidArea)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(BadOffset)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(UnalignedOffset)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(UnalignedSegmentAddress)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(UnalignedSegmentLength)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(BadDumpResponse)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(NotSupported)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpPresent)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(UnclaimedDumpArea)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(CannotClaimDumpArea)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpAreaInUse)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(BadSegmentAdd)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpMessageFailed)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailed)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedSetup)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedRead)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedWrite)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedControl)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedUnknown)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedUnknownError)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(ServerRestarted)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Ok),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpAgentUnsupported)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(InvalidArea)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(BadOffset)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(UnalignedOffset)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(UnalignedSegmentAddress)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(UnalignedSegmentLength)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(BadDumpResponse)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(NotSupported)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpPresent)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(UnclaimedDumpArea)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(CannotClaimDumpArea)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpAreaInUse)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(BadSegmentAdd)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpMessageFailed)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailed)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedSetup)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedRead)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedWrite)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedControl)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedUnknown)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedUnknownError)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(ServerRestarted)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Ok),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpAgentUnsupported)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(InvalidArea)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(BadOffset)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(UnalignedOffset)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(UnalignedSegmentAddress)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(UnalignedSegmentLength)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(BadDumpResponse)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(NotSupported)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpPresent)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(UnclaimedDumpArea)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(CannotClaimDumpArea)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpAreaInUse)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(BadSegmentAdd)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpMessageFailed)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailed)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedSetup)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedRead)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedWrite)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedControl)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedUnknown)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedUnknownError)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(ServerRestarted)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Ok),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpAgentUnsupported)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(InvalidArea)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(BadOffset)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(UnalignedOffset)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(UnalignedSegmentAddress)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(UnalignedSegmentLength)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(BadDumpResponse)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(NotSupported)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpPresent)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(UnclaimedDumpArea)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(CannotClaimDumpArea)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpAreaInUse)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(BadSegmentAdd)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpMessageFailed)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailed)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedSetup)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedRead)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedWrite)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedControl)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedUnknown)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedUnknownError)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(ServerRestarted)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Ok),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpAgentUnsupported)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(InvalidArea)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(BadOffset)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(UnalignedOffset)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(UnalignedSegmentAddress)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(UnalignedSegmentLength)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(BadDumpResponse)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(NotSupported)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpPresent)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(UnclaimedDumpArea)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(CannotClaimDumpArea)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpAreaInUse)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(BadSegmentAdd)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpMessageFailed)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailed)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedSetup)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedRead)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedWrite)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedControl)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedUnknown)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedUnknownError)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(ServerRestarted)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Ok),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpAgentUnsupported)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(InvalidArea)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(BadOffset)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(UnalignedOffset)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(UnalignedSegmentAddress)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(UnalignedSegmentLength)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(BadDumpResponse)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(NotSupported)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpPresent)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(UnclaimedDumpArea)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(CannotClaimDumpArea)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpAreaInUse)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(BadSegmentAdd)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpMessageFailed)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailed)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedSetup)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedRead)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedWrite)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedControl)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedUnknown)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedUnknownError)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(ServerRestarted)),0
dump_agent,task_jefe_api::__JEFE_CLIENT_COUNTERS,restart_me_raw,0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Ok),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Err(NotYours)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Err(QueueEmpty)),1
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Err(Other)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Err(ServerRestarted)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Ok),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(NotYours)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(InvalidVLan)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(QueueFull)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(Other)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(ServerRestarted)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,smi_read(Ok),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,smi_read(Err),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,smi_write(Ok),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,smi_write(Err),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Ok),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Err(InvalidPort)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Err(NotImplemented)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Err(Other)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Err(ServerRestarted)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Ok),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Err(InvalidPort)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Err(NotImplemented)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Err(Other)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Err(ServerRestarted)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Ok),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(NotAvailable)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(BadMacIndex)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(BadRegister)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(WrongChipId)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(ServerRestarted)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Ok),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(NotAvailable)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(BadMacIndex)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(BadRegister)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(WrongChipId)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(ServerRestarted)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Ok),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(NotAvailable)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(BadMacIndex)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(BadRegister)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(WrongChipId)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(ServerRestarted)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,get_mac_address,0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,get_spare_mac_addresses,0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Ok),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Err(NotAvailable)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Err(VscError)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Err(KszError)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Err(ServerRestarted)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Ok),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Err(NotAvailable)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Err(VscError)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Err(KszError)),0
dump_agent,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Err(ServerRestarted)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Ok),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(IllegalTransition)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(MuxToHostCPUFailed)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(MuxToSPFailed)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(ReadRegsFailed)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(CPUNotPresent)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(UnrecognizedCPU)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(A1Timeout)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(A0TimeoutGroupC)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(A0Timeout)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(I2cFault)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(ServerRestarted)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Ok),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(IllegalTransition)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(MuxToHostCPUFailed)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(MuxToSPFailed)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(ReadRegsFailed)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(CPUNotPresent)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(UnrecognizedCPU)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(A1Timeout)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(A0TimeoutGroupC)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(A0Timeout)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(I2cFault)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(ServerRestarted)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Ok),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(IllegalTransition)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(MuxToHostCPUFailed)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(MuxToSPFailed)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(ReadRegsFailed)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(CPUNotPresent)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(UnrecognizedCPU)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(A1Timeout)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(A0TimeoutGroupC)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(A0Timeout)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(I2cFault)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(ServerRestarted)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Ok),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(IllegalTransition)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(MuxToHostCPUFailed)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(MuxToSPFailed)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(ReadRegsFailed)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(CPUNotPresent)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(UnrecognizedCPU)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(A1Timeout)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(A0TimeoutGroupC)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(A0Timeout)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(I2cFault)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(ServerRestarted)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,send_hardware_nmi(Ok),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,send_hardware_nmi(Err),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Ok),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(IllegalTransition)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(MuxToHostCPUFailed)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(MuxToSPFailed)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(ReadRegsFailed)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(CPUNotPresent)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(UnrecognizedCPU)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(A1Timeout)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(A0TimeoutGroupC)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(A0Timeout)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(I2cFault)),0
gimlet_inspector,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(ServerRestarted)),0
gimlet_inspector,task_gimlet_inspector::__COUNTERS,RecvPacket,0
gimlet_inspector,task_gimlet_inspector::__COUNTERS,RequestRejected,0
gimlet_inspector,task_gimlet_inspector::__COUNTERS,Respond,0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Ok),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Err(NotYours)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Err(QueueEmpty)),1
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Err(Other)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Err(ServerRestarted)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Ok),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(NotYours)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(InvalidVLan)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(QueueFull)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(Other)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(ServerRestarted)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,smi_read(Ok),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,smi_read(Err),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,smi_write(Ok),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,smi_write(Err),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Ok),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Err(InvalidPort)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Err(NotImplemented)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Err(Other)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Err(ServerRestarted)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Ok),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Err(InvalidPort)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Err(NotImplemented)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Err(Other)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Err(ServerRestarted)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Ok),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(NotAvailable)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(BadMacIndex)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(BadRegister)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(WrongChipId)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(ServerRestarted)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Ok),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(NotAvailable)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(BadMacIndex)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(BadRegister)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(WrongChipId)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(ServerRestarted)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Ok),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(NotAvailable)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(BadMacIndex)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(BadRegister)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(WrongChipId)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(ServerRestarted)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,get_mac_address,0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,get_spare_mac_addresses,0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Ok),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Err(NotAvailable)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Err(VscError)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Err(KszError)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Err(ServerRestarted)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Ok),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Err(NotAvailable)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Err(VscError)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Err(KszError)),0
gimlet_inspector,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Err(ServerRestarted)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Ok),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(WriteEnableFailed)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(HashBadRange)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(HashError)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(HashNotConfigured)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(NoDevSelect)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(NotMuxedToSP)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(Sector0IsReserved)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(NoPersistentData)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(MonotonicCounterOverflow)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(ServerRestarted)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Ok),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(WriteEnableFailed)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(HashBadRange)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(HashError)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(HashNotConfigured)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(NoDevSelect)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(NotMuxedToSP)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(Sector0IsReserved)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(NoPersistentData)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(MonotonicCounterOverflow)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(ServerRestarted)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Ok),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(WriteEnableFailed)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(HashBadRange)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(HashError)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(HashNotConfigured)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(NoDevSelect)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(NotMuxedToSP)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(Sector0IsReserved)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(NoPersistentData)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(MonotonicCounterOverflow)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(ServerRestarted)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Ok),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(WriteEnableFailed)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(HashBadRange)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(HashError)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(HashNotConfigured)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(NoDevSelect)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(NotMuxedToSP)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(Sector0IsReserved)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(NoPersistentData)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(MonotonicCounterOverflow)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(ServerRestarted)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Ok),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(WriteEnableFailed)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(HashBadRange)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(HashError)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(HashNotConfigured)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(NoDevSelect)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(NotMuxedToSP)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(Sector0IsReserved)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(NoPersistentData)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(MonotonicCounterOverflow)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(ServerRestarted)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Ok),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(WriteEnableFailed)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(HashBadRange)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(HashError)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(HashNotConfigured)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(NoDevSelect)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(NotMuxedToSP)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(Sector0IsReserved)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(NoPersistentData)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(MonotonicCounterOverflow)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(ServerRestarted)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Ok),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(WriteEnableFailed)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(HashBadRange)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(HashError)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(HashNotConfigured)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(NoDevSelect)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(NotMuxedToSP)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(Sector0IsReserved)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(NoPersistentData)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(MonotonicCounterOverflow)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(ServerRestarted)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Ok),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(WriteEnableFailed)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(HashBadRange)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(HashError)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(HashNotConfigured)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(NoDevSelect)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(NotMuxedToSP)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(Sector0IsReserved)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(NoPersistentData)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(MonotonicCounterOverflow)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(ServerRestarted)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Ok),1
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(WriteEnableFailed)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(HashBadRange)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(HashError)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(HashNotConfigured)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(NoDevSelect)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(NotMuxedToSP)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(Sector0IsReserved)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(NoPersistentData)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(MonotonicCounterOverflow)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(ServerRestarted)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Ok),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(WriteEnableFailed)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(HashBadRange)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(HashError)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(HashNotConfigured)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(NoDevSelect)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(NotMuxedToSP)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(Sector0IsReserved)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(NoPersistentData)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(MonotonicCounterOverflow)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(ServerRestarted)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Ok),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(WriteEnableFailed)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(HashBadRange)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(HashError)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(HashNotConfigured)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(NoDevSelect)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(NotMuxedToSP)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(Sector0IsReserved)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(NoPersistentData)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(MonotonicCounterOverflow)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(ServerRestarted)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Ok),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(WriteEnableFailed)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(HashBadRange)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(HashError)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(HashNotConfigured)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(NoDevSelect)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(NotMuxedToSP)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(Sector0IsReserved)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(NoPersistentData)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(MonotonicCounterOverflow)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(ServerRestarted)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Ok),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(WriteEnableFailed)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(HashBadRange)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(HashError)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(HashNotConfigured)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(NoDevSelect)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(NotMuxedToSP)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(Sector0IsReserved)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(NoPersistentData)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(MonotonicCounterOverflow)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(ServerRestarted)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Ok),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(WriteEnableFailed)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(HashBadRange)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(HashError)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(HashNotConfigured)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(NoDevSelect)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(NotMuxedToSP)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(Sector0IsReserved)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(NoPersistentData)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(MonotonicCounterOverflow)),0
gimlet_seq,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(ServerRestarted)),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,Ice40Rails,1
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,IdentValid(true),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,IdentValid(false),1
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,ChecksumValid(true),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,ChecksumValid(false),1
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,Reprogram(true),1
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,Reprogram(false),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,Programmed,1
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,Programming,1
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,Ice40PowerGoodV1P2(true),1
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,Ice40PowerGoodV1P2(false),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,Ice40PowerGoodV3P3(true),1
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,Ice40PowerGoodV3P3(false),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,RailsOff,1
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,Ident,1
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,A2Status,1
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,A2,1
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,A0FailureDetails,0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,A0Failed(IllegalTransition),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,A0Failed(MuxToHostCPUFailed),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,A0Failed(MuxToSPFailed),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,A0Failed(ReadRegsFailed),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,A0Failed(CPUNotPresent),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,A0Failed(UnrecognizedCPU),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,A0Failed(A1Timeout),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,A0Failed(A0TimeoutGroupC),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,A0Failed(A0Timeout),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,A0Failed(I2cFault),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,A0Failed(ServerRestarted),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,A1Status,102
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,CPUPresent(true),1
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,CPUPresent(false),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,Coretype,1
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,A0Status,294
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,A0Power,15
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,NICPowerEnableLow,3
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,RailsOn,1
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,UartEnabled,1
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,A0,1
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,SetState,1
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,UpdateState(A2),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,UpdateState(A2PlusFans),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,UpdateState(A1),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,UpdateState(A0),2
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,UpdateState(A0PlusHP),2
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,UpdateState(A0Thermtrip),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,UpdateState(A0Reset),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,ClockConfigWrite,446
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,ClockConfigSuccess,1
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,Status,16787
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,PGStatus,1
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,SMStatus,1
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,NICStatus,1
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,ResetCounts,0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,PowerControl,1
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,InterruptFlags,1
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,V3P3SysA0VOut,2
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,SpdBankAbsent,0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,SpdAbsent,0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,SpdDimmsFound,1
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,I2cFault(BadResponse),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,I2cFault(BadArg),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,I2cFault(NoDevice),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,I2cFault(BadController),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,I2cFault(ReservedAddress),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,I2cFault(BadPort),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,I2cFault(NoRegister),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,I2cFault(BadMux),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,I2cFault(BadSegment),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,I2cFault(MuxNotFound),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,I2cFault(SegmentNotFound),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,I2cFault(SegmentDisconnected),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,I2cFault(MuxDisconnected),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,I2cFault(MuxMissing),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,I2cFault(BadMuxRegister),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,I2cFault(BusReset),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,I2cFault(BusResetMux),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,I2cFault(BusLocked),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,I2cFault(BusLockedMux),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,I2cFault(ControllerBusy),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,I2cFault(BusError),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,I2cFault(BadDeviceState),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,I2cFault(OperationNotSupported),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,I2cFault(IllegalLeaseCount),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,I2cFault(TooMuchData),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,StartFailed(IllegalTransition),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,StartFailed(MuxToHostCPUFailed),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,StartFailed(MuxToSPFailed),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,StartFailed(ReadRegsFailed),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,StartFailed(CPUNotPresent),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,StartFailed(UnrecognizedCPU),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,StartFailed(A1Timeout),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,StartFailed(A0TimeoutGroupC),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,StartFailed(A0Timeout),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,StartFailed(I2cFault),0
gimlet_seq,drv_gimlet_seq_server::__RINGBUF,StartFailed(ServerRestarted),0
gimlet_seq,drv_spi_api::__SPI_CLIENT_COUNTERS,read(Ok),0
gimlet_seq,drv_spi_api::__SPI_CLIENT_COUNTERS,read(Err(BadTransferSize)),0
gimlet_seq,drv_spi_api::__SPI_CLIENT_COUNTERS,read(Err(TaskRestarted)),0
gimlet_seq,drv_spi_api::__SPI_CLIENT_COUNTERS,read(Err(NothingToRelease)),0
gimlet_seq,drv_spi_api::__SPI_CLIENT_COUNTERS,read(Err(BadDevice)),0
gimlet_seq,drv_spi_api::__SPI_CLIENT_COUNTERS,write(Ok),530
gimlet_seq,drv_spi_api::__SPI_CLIENT_COUNTERS,write(Err(BadTransferSize)),0
gimlet_seq,drv_spi_api::__SPI_CLIENT_COUNTERS,write(Err(TaskRestarted)),0
gimlet_seq,drv_spi_api::__SPI_CLIENT_COUNTERS,write(Err(NothingToRelease)),0
gimlet_seq,drv_spi_api::__SPI_CLIENT_COUNTERS,write(Err(BadDevice)),0
gimlet_seq,drv_spi_api::__SPI_CLIENT_COUNTERS,exchange(Ok),67580
gimlet_seq,drv_spi_api::__SPI_CLIENT_COUNTERS,exchange(Err(BadTransferSize)),0
gimlet_seq,drv_spi_api::__SPI_CLIENT_COUNTERS,exchange(Err(TaskRestarted)),0
gimlet_seq,drv_spi_api::__SPI_CLIENT_COUNTERS,exchange(Err(NothingToRelease)),0
gimlet_seq,drv_spi_api::__SPI_CLIENT_COUNTERS,exchange(Err(BadDevice)),0
gimlet_seq,drv_spi_api::__SPI_CLIENT_COUNTERS,lock(Ok),4
gimlet_seq,drv_spi_api::__SPI_CLIENT_COUNTERS,lock(Err(BadTransferSize)),0
gimlet_seq,drv_spi_api::__SPI_CLIENT_COUNTERS,lock(Err(TaskRestarted)),0
gimlet_seq,drv_spi_api::__SPI_CLIENT_COUNTERS,lock(Err(NothingToRelease)),0
gimlet_seq,drv_spi_api::__SPI_CLIENT_COUNTERS,lock(Err(BadDevice)),0
gimlet_seq,drv_spi_api::__SPI_CLIENT_COUNTERS,release(Ok),1
gimlet_seq,drv_spi_api::__SPI_CLIENT_COUNTERS,release(Err(BadTransferSize)),0
gimlet_seq,drv_spi_api::__SPI_CLIENT_COUNTERS,release(Err(TaskRestarted)),0
gimlet_seq,drv_spi_api::__SPI_CLIENT_COUNTERS,release(Err(NothingToRelease)),0
gimlet_seq,drv_spi_api::__SPI_CLIENT_COUNTERS,release(Err(BadDevice)),0
gimlet_seq,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enable_clock_raw(Ok),0
gimlet_seq,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enable_clock_raw(Err(NoSuchPeripheral)),0
gimlet_seq,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,disable_clock_raw(Ok),0
gimlet_seq,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,disable_clock_raw(Err(NoSuchPeripheral)),0
gimlet_seq,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enter_reset_raw(Ok),0
gimlet_seq,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enter_reset_raw(Err(NoSuchPeripheral)),0
gimlet_seq,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,leave_reset_raw(Ok),0
gimlet_seq,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,leave_reset_raw(Err(NoSuchPeripheral)),0
gimlet_seq,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_configure_raw,14
gimlet_seq,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_set_reset,15
gimlet_seq,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_read_input,16796
gimlet_seq,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_toggle(Ok),0
gimlet_seq,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_toggle(Err),0
gimlet_seq,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,read_uid,0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_state,0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,set_state,5
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,request_reset,0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_reset_reason,0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,set_reset_reason,0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Ok),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpAgentUnsupported)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(InvalidArea)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(BadOffset)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(UnalignedOffset)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(UnalignedSegmentAddress)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(UnalignedSegmentLength)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(BadDumpResponse)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(NotSupported)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpPresent)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(UnclaimedDumpArea)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(CannotClaimDumpArea)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpAreaInUse)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(BadSegmentAdd)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpMessageFailed)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailed)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedSetup)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedRead)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedWrite)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedControl)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedUnknown)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedUnknownError)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(ServerRestarted)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Ok),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpAgentUnsupported)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(InvalidArea)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(BadOffset)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(UnalignedOffset)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(UnalignedSegmentAddress)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(UnalignedSegmentLength)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(BadDumpResponse)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(NotSupported)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpPresent)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(UnclaimedDumpArea)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(CannotClaimDumpArea)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpAreaInUse)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(BadSegmentAdd)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpMessageFailed)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailed)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedSetup)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedRead)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedWrite)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedControl)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedUnknown)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedUnknownError)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(ServerRestarted)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Ok),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpAgentUnsupported)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(InvalidArea)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(BadOffset)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(UnalignedOffset)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(UnalignedSegmentAddress)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(UnalignedSegmentLength)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(BadDumpResponse)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(NotSupported)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpPresent)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(UnclaimedDumpArea)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(CannotClaimDumpArea)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpAreaInUse)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(BadSegmentAdd)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpMessageFailed)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailed)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedSetup)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedRead)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedWrite)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedControl)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedUnknown)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedUnknownError)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(ServerRestarted)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Ok),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpAgentUnsupported)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(InvalidArea)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(BadOffset)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(UnalignedOffset)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(UnalignedSegmentAddress)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(UnalignedSegmentLength)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(BadDumpResponse)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(NotSupported)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpPresent)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(UnclaimedDumpArea)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(CannotClaimDumpArea)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpAreaInUse)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(BadSegmentAdd)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpMessageFailed)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailed)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedSetup)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedRead)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedWrite)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedControl)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedUnknown)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedUnknownError)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(ServerRestarted)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Ok),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpAgentUnsupported)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(InvalidArea)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(BadOffset)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(UnalignedOffset)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(UnalignedSegmentAddress)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(UnalignedSegmentLength)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(BadDumpResponse)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(NotSupported)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpPresent)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(UnclaimedDumpArea)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(CannotClaimDumpArea)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpAreaInUse)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(BadSegmentAdd)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpMessageFailed)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailed)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedSetup)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedRead)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedWrite)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedControl)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedUnknown)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedUnknownError)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(ServerRestarted)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Ok),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpAgentUnsupported)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(InvalidArea)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(BadOffset)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(UnalignedOffset)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(UnalignedSegmentAddress)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(UnalignedSegmentLength)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(BadDumpResponse)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(NotSupported)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpPresent)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(UnclaimedDumpArea)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(CannotClaimDumpArea)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpAreaInUse)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(BadSegmentAdd)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpMessageFailed)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailed)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedSetup)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedRead)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedWrite)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedControl)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedUnknown)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedUnknownError)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(ServerRestarted)),0
gimlet_seq,task_jefe_api::__JEFE_CLIENT_COUNTERS,restart_me_raw,0
gimlet_seq,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_mac_address_block(Ok),0
gimlet_seq,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_mac_address_block(Err(ValueNotSet)),0
gimlet_seq,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_mac_address_block(Ok),1
gimlet_seq,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_mac_address_block(Err(ValueAlreadySet)),0
gimlet_seq,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_identity(Ok),0
gimlet_seq,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_identity(Err(ValueNotSet)),0
gimlet_seq,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_identity(Ok),1
gimlet_seq,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_identity(Err(ValueAlreadySet)),0
gimlet_seq,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_next_boot_host_startup_options,0
gimlet_seq,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_next_boot_host_startup_options,0
gimlet_seq,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_spd_eeprom,32
gimlet_seq,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_spd_present,0
gimlet_seq,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_spd_data,0
gimlet_seq,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_full_spd_data,0
hash_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enable_clock_raw(Ok),1
hash_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enable_clock_raw(Err(NoSuchPeripheral)),0
hash_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,disable_clock_raw(Ok),1
hash_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,disable_clock_raw(Err(NoSuchPeripheral)),0
hash_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enter_reset_raw(Ok),1
hash_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enter_reset_raw(Err(NoSuchPeripheral)),0
hash_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,leave_reset_raw(Ok),1
hash_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,leave_reset_raw(Err(NoSuchPeripheral)),0
hash_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_configure_raw,0
hash_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_set_reset,0
hash_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_read_input,0
hash_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_toggle(Ok),0
hash_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_toggle(Err),0
hash_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,read_uid,0
hf,drv_hash_api::__HASH_CLIENT_COUNTERS,init_sha256(Ok),0
hf,drv_hash_api::__HASH_CLIENT_COUNTERS,init_sha256(Err(NotInitialized)),0
hf,drv_hash_api::__HASH_CLIENT_COUNTERS,init_sha256(Err(InvalidState)),0
hf,drv_hash_api::__HASH_CLIENT_COUNTERS,init_sha256(Err(Busy)),0
hf,drv_hash_api::__HASH_CLIENT_COUNTERS,init_sha256(Err(NoData)),0
hf,drv_hash_api::__HASH_CLIENT_COUNTERS,init_sha256(Err(ServerRestarted)),0
hf,drv_hash_api::__HASH_CLIENT_COUNTERS,update(Ok),0
hf,drv_hash_api::__HASH_CLIENT_COUNTERS,update(Err(NotInitialized)),0
hf,drv_hash_api::__HASH_CLIENT_COUNTERS,update(Err(InvalidState)),0
hf,drv_hash_api::__HASH_CLIENT_COUNTERS,update(Err(Busy)),0
hf,drv_hash_api::__HASH_CLIENT_COUNTERS,update(Err(NoData)),0
hf,drv_hash_api::__HASH_CLIENT_COUNTERS,update(Err(ServerRestarted)),0
hf,drv_hash_api::__HASH_CLIENT_COUNTERS,finalize_sha256(Ok),0
hf,drv_hash_api::__HASH_CLIENT_COUNTERS,finalize_sha256(Err(NotInitialized)),0
hf,drv_hash_api::__HASH_CLIENT_COUNTERS,finalize_sha256(Err(InvalidState)),0
hf,drv_hash_api::__HASH_CLIENT_COUNTERS,finalize_sha256(Err(Busy)),0
hf,drv_hash_api::__HASH_CLIENT_COUNTERS,finalize_sha256(Err(NoData)),0
hf,drv_hash_api::__HASH_CLIENT_COUNTERS,finalize_sha256(Err(ServerRestarted)),0
hf,drv_hash_api::__HASH_CLIENT_COUNTERS,digest_sha256(Ok),0
hf,drv_hash_api::__HASH_CLIENT_COUNTERS,digest_sha256(Err(NotInitialized)),0
hf,drv_hash_api::__HASH_CLIENT_COUNTERS,digest_sha256(Err(InvalidState)),0
hf,drv_hash_api::__HASH_CLIENT_COUNTERS,digest_sha256(Err(Busy)),0
hf,drv_hash_api::__HASH_CLIENT_COUNTERS,digest_sha256(Err(NoData)),0
hf,drv_hash_api::__HASH_CLIENT_COUNTERS,digest_sha256(Err(ServerRestarted)),0
hf,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enable_clock_raw(Ok),1
hf,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enable_clock_raw(Err(NoSuchPeripheral)),0
hf,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,disable_clock_raw(Ok),0
hf,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,disable_clock_raw(Err(NoSuchPeripheral)),0
hf,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enter_reset_raw(Ok),0
hf,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enter_reset_raw(Err(NoSuchPeripheral)),0
hf,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,leave_reset_raw(Ok),1
hf,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,leave_reset_raw(Err(NoSuchPeripheral)),0
hf,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_configure_raw,6
hf,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_set_reset,10
hf,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_read_input,0
hf,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_toggle(Ok),0
hf,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_toggle(Err),0
hf,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,read_uid,0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Ok),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(WriteEnableFailed)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(HashBadRange)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(HashError)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(HashNotConfigured)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(NoDevSelect)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(NotMuxedToSP)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(Sector0IsReserved)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(NoPersistentData)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(MonotonicCounterOverflow)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(ServerRestarted)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Ok),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(WriteEnableFailed)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(HashBadRange)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(HashError)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(HashNotConfigured)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(NoDevSelect)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(NotMuxedToSP)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(Sector0IsReserved)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(NoPersistentData)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(MonotonicCounterOverflow)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(ServerRestarted)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Ok),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(WriteEnableFailed)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(HashBadRange)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(HashError)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(HashNotConfigured)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(NoDevSelect)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(NotMuxedToSP)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(Sector0IsReserved)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(NoPersistentData)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(MonotonicCounterOverflow)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(ServerRestarted)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Ok),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(WriteEnableFailed)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(HashBadRange)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(HashError)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(HashNotConfigured)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(NoDevSelect)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(NotMuxedToSP)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(Sector0IsReserved)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(NoPersistentData)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(MonotonicCounterOverflow)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(ServerRestarted)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Ok),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(WriteEnableFailed)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(HashBadRange)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(HashError)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(HashNotConfigured)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(NoDevSelect)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(NotMuxedToSP)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(Sector0IsReserved)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(NoPersistentData)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(MonotonicCounterOverflow)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(ServerRestarted)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Ok),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(WriteEnableFailed)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(HashBadRange)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(HashError)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(HashNotConfigured)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(NoDevSelect)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(NotMuxedToSP)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(Sector0IsReserved)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(NoPersistentData)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(MonotonicCounterOverflow)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(ServerRestarted)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Ok),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(WriteEnableFailed)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(HashBadRange)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(HashError)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(HashNotConfigured)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(NoDevSelect)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(NotMuxedToSP)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(Sector0IsReserved)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(NoPersistentData)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(MonotonicCounterOverflow)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(ServerRestarted)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Ok),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(WriteEnableFailed)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(HashBadRange)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(HashError)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(HashNotConfigured)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(NoDevSelect)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(NotMuxedToSP)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(Sector0IsReserved)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(NoPersistentData)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(MonotonicCounterOverflow)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(ServerRestarted)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Ok),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(WriteEnableFailed)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(HashBadRange)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(HashError)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(HashNotConfigured)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(NoDevSelect)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(NotMuxedToSP)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(Sector0IsReserved)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(NoPersistentData)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(MonotonicCounterOverflow)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(ServerRestarted)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Ok),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(WriteEnableFailed)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(HashBadRange)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(HashError)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(HashNotConfigured)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(NoDevSelect)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(NotMuxedToSP)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(Sector0IsReserved)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(NoPersistentData)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(MonotonicCounterOverflow)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(ServerRestarted)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Ok),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(WriteEnableFailed)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(HashBadRange)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(HashError)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(HashNotConfigured)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(NoDevSelect)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(NotMuxedToSP)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(Sector0IsReserved)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(NoPersistentData)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(MonotonicCounterOverflow)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(ServerRestarted)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Ok),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(WriteEnableFailed)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(HashBadRange)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(HashError)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(HashNotConfigured)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(NoDevSelect)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(NotMuxedToSP)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(Sector0IsReserved)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(NoPersistentData)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(MonotonicCounterOverflow)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(ServerRestarted)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Ok),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(WriteEnableFailed)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(HashBadRange)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(HashError)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(HashNotConfigured)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(NoDevSelect)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(NotMuxedToSP)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(Sector0IsReserved)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(NoPersistentData)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(MonotonicCounterOverflow)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(ServerRestarted)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Ok),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(WriteEnableFailed)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(HashBadRange)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(HashError)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(HashNotConfigured)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(NoDevSelect)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(NotMuxedToSP)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(Sector0IsReserved)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(NoPersistentData)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(MonotonicCounterOverflow)),0
hiffy,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(ServerRestarted)),0
hiffy,drv_hash_api::__HASH_CLIENT_COUNTERS,init_sha256(Ok),0
hiffy,drv_hash_api::__HASH_CLIENT_COUNTERS,init_sha256(Err(NotInitialized)),0
hiffy,drv_hash_api::__HASH_CLIENT_COUNTERS,init_sha256(Err(InvalidState)),0
hiffy,drv_hash_api::__HASH_CLIENT_COUNTERS,init_sha256(Err(Busy)),0
hiffy,drv_hash_api::__HASH_CLIENT_COUNTERS,init_sha256(Err(NoData)),0
hiffy,drv_hash_api::__HASH_CLIENT_COUNTERS,init_sha256(Err(ServerRestarted)),0
hiffy,drv_hash_api::__HASH_CLIENT_COUNTERS,update(Ok),0
hiffy,drv_hash_api::__HASH_CLIENT_COUNTERS,update(Err(NotInitialized)),0
hiffy,drv_hash_api::__HASH_CLIENT_COUNTERS,update(Err(InvalidState)),0
hiffy,drv_hash_api::__HASH_CLIENT_COUNTERS,update(Err(Busy)),0
hiffy,drv_hash_api::__HASH_CLIENT_COUNTERS,update(Err(NoData)),0
hiffy,drv_hash_api::__HASH_CLIENT_COUNTERS,update(Err(ServerRestarted)),0
hiffy,drv_hash_api::__HASH_CLIENT_COUNTERS,finalize_sha256(Ok),0
hiffy,drv_hash_api::__HASH_CLIENT_COUNTERS,finalize_sha256(Err(NotInitialized)),0
hiffy,drv_hash_api::__HASH_CLIENT_COUNTERS,finalize_sha256(Err(InvalidState)),0
hiffy,drv_hash_api::__HASH_CLIENT_COUNTERS,finalize_sha256(Err(Busy)),0
hiffy,drv_hash_api::__HASH_CLIENT_COUNTERS,finalize_sha256(Err(NoData)),0
hiffy,drv_hash_api::__HASH_CLIENT_COUNTERS,finalize_sha256(Err(ServerRestarted)),0
hiffy,drv_hash_api::__HASH_CLIENT_COUNTERS,digest_sha256(Ok),0
hiffy,drv_hash_api::__HASH_CLIENT_COUNTERS,digest_sha256(Err(NotInitialized)),0
hiffy,drv_hash_api::__HASH_CLIENT_COUNTERS,digest_sha256(Err(InvalidState)),0
hiffy,drv_hash_api::__HASH_CLIENT_COUNTERS,digest_sha256(Err(Busy)),0
hiffy,drv_hash_api::__HASH_CLIENT_COUNTERS,digest_sha256(Err(NoData)),0
hiffy,drv_hash_api::__HASH_CLIENT_COUNTERS,digest_sha256(Err(ServerRestarted)),0
hiffy,drv_spi_api::__SPI_CLIENT_COUNTERS,read(Ok),0
hiffy,drv_spi_api::__SPI_CLIENT_COUNTERS,read(Err(BadTransferSize)),0
hiffy,drv_spi_api::__SPI_CLIENT_COUNTERS,read(Err(TaskRestarted)),0
hiffy,drv_spi_api::__SPI_CLIENT_COUNTERS,read(Err(NothingToRelease)),0
hiffy,drv_spi_api::__SPI_CLIENT_COUNTERS,read(Err(BadDevice)),0
hiffy,drv_spi_api::__SPI_CLIENT_COUNTERS,write(Ok),0
hiffy,drv_spi_api::__SPI_CLIENT_COUNTERS,write(Err(BadTransferSize)),0
hiffy,drv_spi_api::__SPI_CLIENT_COUNTERS,write(Err(TaskRestarted)),0
hiffy,drv_spi_api::__SPI_CLIENT_COUNTERS,write(Err(NothingToRelease)),0
hiffy,drv_spi_api::__SPI_CLIENT_COUNTERS,write(Err(BadDevice)),0
hiffy,drv_spi_api::__SPI_CLIENT_COUNTERS,exchange(Ok),0
hiffy,drv_spi_api::__SPI_CLIENT_COUNTERS,exchange(Err(BadTransferSize)),0
hiffy,drv_spi_api::__SPI_CLIENT_COUNTERS,exchange(Err(TaskRestarted)),0
hiffy,drv_spi_api::__SPI_CLIENT_COUNTERS,exchange(Err(NothingToRelease)),0
hiffy,drv_spi_api::__SPI_CLIENT_COUNTERS,exchange(Err(BadDevice)),0
hiffy,drv_spi_api::__SPI_CLIENT_COUNTERS,lock(Ok),0
hiffy,drv_spi_api::__SPI_CLIENT_COUNTERS,lock(Err(BadTransferSize)),0
hiffy,drv_spi_api::__SPI_CLIENT_COUNTERS,lock(Err(TaskRestarted)),0
hiffy,drv_spi_api::__SPI_CLIENT_COUNTERS,lock(Err(NothingToRelease)),0
hiffy,drv_spi_api::__SPI_CLIENT_COUNTERS,lock(Err(BadDevice)),0
hiffy,drv_spi_api::__SPI_CLIENT_COUNTERS,release(Ok),0
hiffy,drv_spi_api::__SPI_CLIENT_COUNTERS,release(Err(BadTransferSize)),0
hiffy,drv_spi_api::__SPI_CLIENT_COUNTERS,release(Err(TaskRestarted)),0
hiffy,drv_spi_api::__SPI_CLIENT_COUNTERS,release(Err(NothingToRelease)),0
hiffy,drv_spi_api::__SPI_CLIENT_COUNTERS,release(Err(BadDevice)),0
hiffy,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enable_clock_raw(Ok),0
hiffy,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enable_clock_raw(Err(NoSuchPeripheral)),0
hiffy,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,disable_clock_raw(Ok),0
hiffy,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,disable_clock_raw(Err(NoSuchPeripheral)),0
hiffy,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enter_reset_raw(Ok),0
hiffy,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enter_reset_raw(Err(NoSuchPeripheral)),0
hiffy,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,leave_reset_raw(Ok),0
hiffy,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,leave_reset_raw(Err(NoSuchPeripheral)),0
hiffy,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_configure_raw,0
hiffy,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_set_reset,0
hiffy,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_read_input,0
hiffy,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_toggle(Ok),0
hiffy,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_toggle(Err),0
hiffy,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,read_uid,0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Ok),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(WriteEnableFailed)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(HashBadRange)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(HashError)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(HashNotConfigured)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(NoDevSelect)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(NotMuxedToSP)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(Sector0IsReserved)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(NoPersistentData)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(MonotonicCounterOverflow)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_id(Err(ServerRestarted)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Ok),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(WriteEnableFailed)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(HashBadRange)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(HashError)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(HashNotConfigured)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(NoDevSelect)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(NotMuxedToSP)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(Sector0IsReserved)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(NoPersistentData)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(MonotonicCounterOverflow)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,capacity(Err(ServerRestarted)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Ok),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(WriteEnableFailed)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(HashBadRange)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(HashError)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(HashNotConfigured)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(NoDevSelect)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(NotMuxedToSP)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(Sector0IsReserved)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(NoPersistentData)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(MonotonicCounterOverflow)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read_status(Err(ServerRestarted)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Ok),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(WriteEnableFailed)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(HashBadRange)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(HashError)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(HashNotConfigured)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(NoDevSelect)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(NotMuxedToSP)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(Sector0IsReserved)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(NoPersistentData)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(MonotonicCounterOverflow)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,bulk_erase(Err(ServerRestarted)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Ok),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(WriteEnableFailed)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(HashBadRange)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(HashError)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(HashNotConfigured)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(NoDevSelect)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(NotMuxedToSP)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(Sector0IsReserved)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(NoPersistentData)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(MonotonicCounterOverflow)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,page_program(Err(ServerRestarted)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Ok),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(WriteEnableFailed)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(HashBadRange)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(HashError)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(HashNotConfigured)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(NoDevSelect)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(NotMuxedToSP)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(Sector0IsReserved)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(NoPersistentData)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(MonotonicCounterOverflow)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,read(Err(ServerRestarted)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Ok),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(WriteEnableFailed)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(HashBadRange)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(HashError)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(HashNotConfigured)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(NoDevSelect)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(NotMuxedToSP)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(Sector0IsReserved)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(NoPersistentData)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(MonotonicCounterOverflow)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,sector_erase(Err(ServerRestarted)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Ok),6
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(WriteEnableFailed)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(HashBadRange)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(HashError)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(HashNotConfigured)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(NoDevSelect)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(NotMuxedToSP)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(Sector0IsReserved)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(NoPersistentData)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(MonotonicCounterOverflow)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_mux(Err(ServerRestarted)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Ok),1
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(WriteEnableFailed)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(HashBadRange)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(HashError)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(HashNotConfigured)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(NoDevSelect)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(NotMuxedToSP)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(Sector0IsReserved)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(NoPersistentData)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(MonotonicCounterOverflow)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_mux(Err(ServerRestarted)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Ok),1
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(WriteEnableFailed)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(HashBadRange)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(HashError)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(HashNotConfigured)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(NoDevSelect)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(NotMuxedToSP)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(Sector0IsReserved)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(NoPersistentData)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(MonotonicCounterOverflow)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_dev(Err(ServerRestarted)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Ok),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(WriteEnableFailed)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(HashBadRange)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(HashError)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(HashNotConfigured)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(NoDevSelect)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(NotMuxedToSP)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(Sector0IsReserved)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(NoPersistentData)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(MonotonicCounterOverflow)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,set_dev(Err(ServerRestarted)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Ok),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(WriteEnableFailed)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(HashBadRange)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(HashError)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(HashNotConfigured)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(NoDevSelect)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(NotMuxedToSP)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(Sector0IsReserved)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(NoPersistentData)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(MonotonicCounterOverflow)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,hash(Err(ServerRestarted)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Ok),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(WriteEnableFailed)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(HashBadRange)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(HashError)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(HashNotConfigured)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(NoDevSelect)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(NotMuxedToSP)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(Sector0IsReserved)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(NoPersistentData)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(MonotonicCounterOverflow)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,get_persistent_data(Err(ServerRestarted)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Ok),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(WriteEnableFailed)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(HashBadRange)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(HashError)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(HashNotConfigured)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(NoDevSelect)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(NotMuxedToSP)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(Sector0IsReserved)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(NoPersistentData)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(MonotonicCounterOverflow)),0
host_sp_comms,drv_gimlet_hf_api::__HOSTFLASH_CLIENT_COUNTERS,write_persistent_data(Err(ServerRestarted)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Ok),5
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(IllegalTransition)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(MuxToHostCPUFailed)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(MuxToSPFailed)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(ReadRegsFailed)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(CPUNotPresent)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(UnrecognizedCPU)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(A1Timeout)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(A0TimeoutGroupC)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(A0Timeout)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(I2cFault)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(ServerRestarted)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Ok),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(IllegalTransition)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(MuxToHostCPUFailed)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(MuxToSPFailed)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(ReadRegsFailed)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(CPUNotPresent)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(UnrecognizedCPU)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(A1Timeout)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(A0TimeoutGroupC)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(A0Timeout)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(I2cFault)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(ServerRestarted)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Ok),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(IllegalTransition)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(MuxToHostCPUFailed)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(MuxToSPFailed)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(ReadRegsFailed)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(CPUNotPresent)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(UnrecognizedCPU)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(A1Timeout)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(A0TimeoutGroupC)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(A0Timeout)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(I2cFault)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(ServerRestarted)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Ok),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(IllegalTransition)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(MuxToHostCPUFailed)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(MuxToSPFailed)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(ReadRegsFailed)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(CPUNotPresent)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(UnrecognizedCPU)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(A1Timeout)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(A0TimeoutGroupC)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(A0Timeout)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(I2cFault)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(ServerRestarted)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,send_hardware_nmi(Ok),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,send_hardware_nmi(Err),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Ok),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(IllegalTransition)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(MuxToHostCPUFailed)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(MuxToSPFailed)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(ReadRegsFailed)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(CPUNotPresent)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(UnrecognizedCPU)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(A1Timeout)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(A0TimeoutGroupC)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(A0Timeout)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(I2cFault)),0
host_sp_comms,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(ServerRestarted)),0
host_sp_comms,drv_spi_api::__SPI_CLIENT_COUNTERS,read(Ok),0
host_sp_comms,drv_spi_api::__SPI_CLIENT_COUNTERS,read(Err(BadTransferSize)),0
host_sp_comms,drv_spi_api::__SPI_CLIENT_COUNTERS,read(Err(TaskRestarted)),0
host_sp_comms,drv_spi_api::__SPI_CLIENT_COUNTERS,read(Err(NothingToRelease)),0
host_sp_comms,drv_spi_api::__SPI_CLIENT_COUNTERS,read(Err(BadDevice)),0
host_sp_comms,drv_spi_api::__SPI_CLIENT_COUNTERS,write(Ok),0
host_sp_comms,drv_spi_api::__SPI_CLIENT_COUNTERS,write(Err(BadTransferSize)),0
host_sp_comms,drv_spi_api::__SPI_CLIENT_COUNTERS,write(Err(TaskRestarted)),0
host_sp_comms,drv_spi_api::__SPI_CLIENT_COUNTERS,write(Err(NothingToRelease)),0
host_sp_comms,drv_spi_api::__SPI_CLIENT_COUNTERS,write(Err(BadDevice)),0
host_sp_comms,drv_spi_api::__SPI_CLIENT_COUNTERS,exchange(Ok),1
host_sp_comms,drv_spi_api::__SPI_CLIENT_COUNTERS,exchange(Err(BadTransferSize)),0
host_sp_comms,drv_spi_api::__SPI_CLIENT_COUNTERS,exchange(Err(TaskRestarted)),0
host_sp_comms,drv_spi_api::__SPI_CLIENT_COUNTERS,exchange(Err(NothingToRelease)),0
host_sp_comms,drv_spi_api::__SPI_CLIENT_COUNTERS,exchange(Err(BadDevice)),0
host_sp_comms,drv_spi_api::__SPI_CLIENT_COUNTERS,lock(Ok),0
host_sp_comms,drv_spi_api::__SPI_CLIENT_COUNTERS,lock(Err(BadTransferSize)),0
host_sp_comms,drv_spi_api::__SPI_CLIENT_COUNTERS,lock(Err(TaskRestarted)),0
host_sp_comms,drv_spi_api::__SPI_CLIENT_COUNTERS,lock(Err(NothingToRelease)),0
host_sp_comms,drv_spi_api::__SPI_CLIENT_COUNTERS,lock(Err(BadDevice)),0
host_sp_comms,drv_spi_api::__SPI_CLIENT_COUNTERS,release(Ok),0
host_sp_comms,drv_spi_api::__SPI_CLIENT_COUNTERS,release(Err(BadTransferSize)),0
host_sp_comms,drv_spi_api::__SPI_CLIENT_COUNTERS,release(Err(TaskRestarted)),0
host_sp_comms,drv_spi_api::__SPI_CLIENT_COUNTERS,release(Err(NothingToRelease)),0
host_sp_comms,drv_spi_api::__SPI_CLIENT_COUNTERS,release(Err(BadDevice)),0
host_sp_comms,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enable_clock_raw(Ok),1
host_sp_comms,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enable_clock_raw(Err(NoSuchPeripheral)),0
host_sp_comms,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,disable_clock_raw(Ok),0
host_sp_comms,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,disable_clock_raw(Err(NoSuchPeripheral)),0
host_sp_comms,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enter_reset_raw(Ok),0
host_sp_comms,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enter_reset_raw(Err(NoSuchPeripheral)),0
host_sp_comms,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,leave_reset_raw(Ok),1
host_sp_comms,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,leave_reset_raw(Err(NoSuchPeripheral)),0
host_sp_comms,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_configure_raw,2
host_sp_comms,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_set_reset,3
host_sp_comms,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_read_input,0
host_sp_comms,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_toggle(Ok),0
host_sp_comms,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_toggle(Err),0
host_sp_comms,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,read_uid,1
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,fetch_host_phase2_data(Ok),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,fetch_host_phase2_data(Err(DataUnavailable)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,fetch_host_phase2_data(Err(InvalidStartupOptions)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,fetch_host_phase2_data(Err(OperationUnsupported)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,fetch_host_phase2_data(Err(MgsAttachedToUart)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,fetch_host_phase2_data(Err(ServerRestarted)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,get_host_phase2_data(Ok),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,get_host_phase2_data(Err(DataUnavailable)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,get_host_phase2_data(Err(InvalidStartupOptions)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,get_host_phase2_data(Err(OperationUnsupported)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,get_host_phase2_data(Err(MgsAttachedToUart)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,get_host_phase2_data(Err(ServerRestarted)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,get_startup_options(Ok),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,get_startup_options(Err(DataUnavailable)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,get_startup_options(Err(InvalidStartupOptions)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,get_startup_options(Err(OperationUnsupported)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,get_startup_options(Err(MgsAttachedToUart)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,get_startup_options(Err(ServerRestarted)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,set_startup_options(Ok),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,set_startup_options(Err(DataUnavailable)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,set_startup_options(Err(InvalidStartupOptions)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,set_startup_options(Err(OperationUnsupported)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,set_startup_options(Err(MgsAttachedToUart)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,set_startup_options(Err(ServerRestarted)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,identity,0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,get_uart_client,0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,get_installinator_image_id,0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,set_humility_uart_client(Ok),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,set_humility_uart_client(Err(DataUnavailable)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,set_humility_uart_client(Err(InvalidStartupOptions)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,set_humility_uart_client(Err(OperationUnsupported)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,set_humility_uart_client(Err(MgsAttachedToUart)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,set_humility_uart_client(Err(ServerRestarted)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,uart_read(Ok),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,uart_read(Err(DataUnavailable)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,uart_read(Err(InvalidStartupOptions)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,uart_read(Err(OperationUnsupported)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,uart_read(Err(MgsAttachedToUart)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,uart_read(Err(ServerRestarted)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,uart_write(Ok),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,uart_write(Err(DataUnavailable)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,uart_write(Err(InvalidStartupOptions)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,uart_write(Err(OperationUnsupported)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,uart_write(Err(MgsAttachedToUart)),0
host_sp_comms,task_control_plane_agent_api::__CONTROLPLANEAGENT_CLIENT_COUNTERS,uart_write(Err(ServerRestarted)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Ok),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Err(NotYours)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Err(QueueEmpty)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Err(Other)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Err(ServerRestarted)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Ok),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(NotYours)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(InvalidVLan)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(QueueFull)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(Other)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(ServerRestarted)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,smi_read(Ok),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,smi_read(Err),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,smi_write(Ok),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,smi_write(Err),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Ok),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Err(InvalidPort)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Err(NotImplemented)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Err(Other)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Err(ServerRestarted)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Ok),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Err(InvalidPort)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Err(NotImplemented)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Err(Other)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Err(ServerRestarted)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Ok),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(NotAvailable)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(BadMacIndex)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(BadRegister)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(WrongChipId)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(ServerRestarted)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Ok),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(NotAvailable)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(BadMacIndex)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(BadRegister)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(WrongChipId)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(ServerRestarted)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Ok),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(NotAvailable)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(BadMacIndex)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(BadRegister)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(WrongChipId)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(ServerRestarted)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,get_mac_address,0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,get_spare_mac_addresses,1
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Ok),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Err(NotAvailable)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Err(VscError)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Err(KszError)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Err(ServerRestarted)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Ok),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Err(NotAvailable)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Err(VscError)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Err(KszError)),0
host_sp_comms,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Err(ServerRestarted)),0
host_sp_comms,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_mac_address_block(Ok),0
host_sp_comms,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_mac_address_block(Err(ValueNotSet)),0
host_sp_comms,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_mac_address_block(Ok),0
host_sp_comms,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_mac_address_block(Err(ValueAlreadySet)),0
host_sp_comms,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_identity(Ok),7
host_sp_comms,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_identity(Err(ValueNotSet)),0
host_sp_comms,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_identity(Ok),0
host_sp_comms,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_identity(Err(ValueAlreadySet)),0
host_sp_comms,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_next_boot_host_startup_options,1
host_sp_comms,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_next_boot_host_startup_options,0
host_sp_comms,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_spd_eeprom,0
host_sp_comms,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_spd_present,16
host_sp_comms,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_spd_data,0
host_sp_comms,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_full_spd_data,16
i2c_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enable_clock_raw(Ok),3
i2c_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enable_clock_raw(Err(NoSuchPeripheral)),0
i2c_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,disable_clock_raw(Ok),0
i2c_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,disable_clock_raw(Err(NoSuchPeripheral)),0
i2c_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enter_reset_raw(Ok),0
i2c_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enter_reset_raw(Err(NoSuchPeripheral)),0
i2c_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,leave_reset_raw(Ok),3
i2c_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,leave_reset_raw(Err(NoSuchPeripheral)),0
i2c_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_configure_raw,6284
i2c_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_set_reset,220
i2c_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_read_input,36
i2c_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_toggle(Ok),0
i2c_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_toggle(Err),0
i2c_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,read_uid,0
net,drv_spi_api::__SPI_CLIENT_COUNTERS,read(Ok),0
net,drv_spi_api::__SPI_CLIENT_COUNTERS,read(Err(BadTransferSize)),0
net,drv_spi_api::__SPI_CLIENT_COUNTERS,read(Err(TaskRestarted)),0
net,drv_spi_api::__SPI_CLIENT_COUNTERS,read(Err(NothingToRelease)),0
net,drv_spi_api::__SPI_CLIENT_COUNTERS,read(Err(BadDevice)),0
net,drv_spi_api::__SPI_CLIENT_COUNTERS,write(Ok),62
net,drv_spi_api::__SPI_CLIENT_COUNTERS,write(Err(BadTransferSize)),0
net,drv_spi_api::__SPI_CLIENT_COUNTERS,write(Err(TaskRestarted)),0
net,drv_spi_api::__SPI_CLIENT_COUNTERS,write(Err(NothingToRelease)),0
net,drv_spi_api::__SPI_CLIENT_COUNTERS,write(Err(BadDevice)),0
net,drv_spi_api::__SPI_CLIENT_COUNTERS,exchange(Ok),8
net,drv_spi_api::__SPI_CLIENT_COUNTERS,exchange(Err(BadTransferSize)),0
net,drv_spi_api::__SPI_CLIENT_COUNTERS,exchange(Err(TaskRestarted)),0
net,drv_spi_api::__SPI_CLIENT_COUNTERS,exchange(Err(NothingToRelease)),0
net,drv_spi_api::__SPI_CLIENT_COUNTERS,exchange(Err(BadDevice)),0
net,drv_spi_api::__SPI_CLIENT_COUNTERS,lock(Ok),0
net,drv_spi_api::__SPI_CLIENT_COUNTERS,lock(Err(BadTransferSize)),0
net,drv_spi_api::__SPI_CLIENT_COUNTERS,lock(Err(TaskRestarted)),0
net,drv_spi_api::__SPI_CLIENT_COUNTERS,lock(Err(NothingToRelease)),0
net,drv_spi_api::__SPI_CLIENT_COUNTERS,lock(Err(BadDevice)),0
net,drv_spi_api::__SPI_CLIENT_COUNTERS,release(Ok),0
net,drv_spi_api::__SPI_CLIENT_COUNTERS,release(Err(BadTransferSize)),0
net,drv_spi_api::__SPI_CLIENT_COUNTERS,release(Err(TaskRestarted)),0
net,drv_spi_api::__SPI_CLIENT_COUNTERS,release(Err(NothingToRelease)),0
net,drv_spi_api::__SPI_CLIENT_COUNTERS,release(Err(BadDevice)),0
net,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enable_clock_raw(Ok),4
net,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enable_clock_raw(Err(NoSuchPeripheral)),0
net,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,disable_clock_raw(Ok),0
net,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,disable_clock_raw(Err(NoSuchPeripheral)),0
net,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enter_reset_raw(Ok),2
net,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enter_reset_raw(Err(NoSuchPeripheral)),0
net,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,leave_reset_raw(Ok),2
net,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,leave_reset_raw(Err(NoSuchPeripheral)),0
net,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_configure_raw,13
net,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_set_reset,8
net,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_read_input,0
net,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_toggle(Ok),0
net,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_toggle(Err),0
net,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,read_uid,0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_state,2
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,set_state,0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,request_reset,0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_reset_reason,0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,set_reset_reason,0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Ok),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpAgentUnsupported)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(InvalidArea)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(BadOffset)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(UnalignedOffset)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(UnalignedSegmentAddress)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(UnalignedSegmentLength)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(BadDumpResponse)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(NotSupported)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpPresent)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(UnclaimedDumpArea)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(CannotClaimDumpArea)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpAreaInUse)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(BadSegmentAdd)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpMessageFailed)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailed)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedSetup)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedRead)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedWrite)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedControl)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedUnknown)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedUnknownError)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(ServerRestarted)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Ok),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpAgentUnsupported)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(InvalidArea)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(BadOffset)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(UnalignedOffset)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(UnalignedSegmentAddress)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(UnalignedSegmentLength)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(BadDumpResponse)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(NotSupported)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpPresent)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(UnclaimedDumpArea)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(CannotClaimDumpArea)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpAreaInUse)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(BadSegmentAdd)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpMessageFailed)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailed)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedSetup)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedRead)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedWrite)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedControl)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedUnknown)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedUnknownError)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(ServerRestarted)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Ok),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpAgentUnsupported)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(InvalidArea)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(BadOffset)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(UnalignedOffset)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(UnalignedSegmentAddress)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(UnalignedSegmentLength)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(BadDumpResponse)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(NotSupported)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpPresent)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(UnclaimedDumpArea)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(CannotClaimDumpArea)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpAreaInUse)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(BadSegmentAdd)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpMessageFailed)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailed)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedSetup)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedRead)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedWrite)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedControl)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedUnknown)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedUnknownError)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(ServerRestarted)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Ok),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpAgentUnsupported)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(InvalidArea)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(BadOffset)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(UnalignedOffset)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(UnalignedSegmentAddress)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(UnalignedSegmentLength)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(BadDumpResponse)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(NotSupported)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpPresent)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(UnclaimedDumpArea)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(CannotClaimDumpArea)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpAreaInUse)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(BadSegmentAdd)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpMessageFailed)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailed)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedSetup)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedRead)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedWrite)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedControl)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedUnknown)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedUnknownError)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(ServerRestarted)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Ok),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpAgentUnsupported)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(InvalidArea)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(BadOffset)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(UnalignedOffset)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(UnalignedSegmentAddress)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(UnalignedSegmentLength)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(BadDumpResponse)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(NotSupported)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpPresent)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(UnclaimedDumpArea)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(CannotClaimDumpArea)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpAreaInUse)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(BadSegmentAdd)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpMessageFailed)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailed)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedSetup)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedRead)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedWrite)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedControl)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedUnknown)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedUnknownError)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(ServerRestarted)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Ok),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpAgentUnsupported)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(InvalidArea)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(BadOffset)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(UnalignedOffset)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(UnalignedSegmentAddress)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(UnalignedSegmentLength)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(BadDumpResponse)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(NotSupported)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpPresent)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(UnclaimedDumpArea)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(CannotClaimDumpArea)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpAreaInUse)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(BadSegmentAdd)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpMessageFailed)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailed)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedSetup)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedRead)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedWrite)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedControl)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedUnknown)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedUnknownError)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(ServerRestarted)),0
net,task_jefe_api::__JEFE_CLIENT_COUNTERS,restart_me_raw,0
net,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_mac_address_block(Ok),1
net,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_mac_address_block(Err(ValueNotSet)),0
net,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_mac_address_block(Ok),0
net,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_mac_address_block(Err(ValueAlreadySet)),0
net,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_identity(Ok),0
net,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_identity(Err(ValueNotSet)),0
net,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_identity(Ok),0
net,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_identity(Err(ValueAlreadySet)),0
net,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_next_boot_host_startup_options,0
net,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_next_boot_host_startup_options,0
net,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_spd_eeprom,0
net,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_spd_present,0
net,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_spd_data,0
net,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_full_spd_data,0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Ok),626
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(IllegalTransition)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(MuxToHostCPUFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(MuxToSPFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(ReadRegsFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(CPUNotPresent)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(UnrecognizedCPU)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(A1Timeout)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(A0TimeoutGroupC)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(A0Timeout)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(I2cFault)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(ServerRestarted)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Ok),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(IllegalTransition)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(MuxToHostCPUFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(MuxToSPFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(ReadRegsFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(CPUNotPresent)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(UnrecognizedCPU)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(A1Timeout)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(A0TimeoutGroupC)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(A0Timeout)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(I2cFault)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(ServerRestarted)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Ok),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(IllegalTransition)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(MuxToHostCPUFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(MuxToSPFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(ReadRegsFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(CPUNotPresent)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(UnrecognizedCPU)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(A1Timeout)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(A0TimeoutGroupC)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(A0Timeout)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(I2cFault)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(ServerRestarted)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Ok),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(IllegalTransition)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(MuxToHostCPUFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(MuxToSPFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(ReadRegsFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(CPUNotPresent)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(UnrecognizedCPU)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(A1Timeout)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(A0TimeoutGroupC)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(A0Timeout)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(I2cFault)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(ServerRestarted)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,send_hardware_nmi(Ok),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,send_hardware_nmi(Err),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Ok),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(IllegalTransition)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(MuxToHostCPUFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(MuxToSPFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(ReadRegsFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(CPUNotPresent)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(UnrecognizedCPU)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(A1Timeout)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(A0TimeoutGroupC)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(A0Timeout)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(I2cFault)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(ServerRestarted)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Ok),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(InvalidSensor)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(NoReading)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(NotPresent)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(DeviceError)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(DeviceUnavailable)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(DeviceTimeout)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(DeviceOff)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Ok),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(InvalidSensor)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(NoReading)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(NotPresent)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(DeviceError)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(DeviceUnavailable)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(DeviceTimeout)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(DeviceOff)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_raw_reading(Ok),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_raw_reading(Err(InvalidSensor)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_raw_reading(Err(NoReading)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_last_data(Ok),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_last_data(Err(InvalidSensor)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_last_data(Err(NoReading)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_last_nodata(Ok),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_last_nodata(Err(InvalidSensor)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_last_nodata(Err(NoReading)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_min(Ok),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_min(Err(InvalidSensor)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_min(Err(NoReading)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_max(Ok),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_max(Err(InvalidSensor)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_max(Err(NoReading)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,post(Ok),50300
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,post(Err(InvalidSensor)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,post(Err(NoReading)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,nodata(Ok),3536
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,nodata(Err(InvalidSensor)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,nodata(Err(NoReading)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_nerrors(Ok),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_nerrors(Err(InvalidSensor)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_nerrors(Err(NoReading)),0
spd,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enable_clock_raw(Ok),1
spd,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enable_clock_raw(Err(NoSuchPeripheral)),0
spd,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,disable_clock_raw(Ok),0
spd,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,disable_clock_raw(Err(NoSuchPeripheral)),0
spd,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enter_reset_raw(Ok),0
spd,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enter_reset_raw(Err(NoSuchPeripheral)),0
spd,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,leave_reset_raw(Ok),1
spd,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,leave_reset_raw(Err(NoSuchPeripheral)),0
spd,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_configure_raw,2
spd,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_set_reset,0
spd,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_read_input,0
spd,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_toggle(Ok),0
spd,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_toggle(Err),0
spd,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,read_uid,0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_state,2
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,set_state,0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,request_reset,0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_reset_reason,0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,set_reset_reason,0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Ok),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpAgentUnsupported)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(InvalidArea)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(BadOffset)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(UnalignedOffset)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(UnalignedSegmentAddress)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(UnalignedSegmentLength)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(BadDumpResponse)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(NotSupported)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpPresent)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(UnclaimedDumpArea)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(CannotClaimDumpArea)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpAreaInUse)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(BadSegmentAdd)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpMessageFailed)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailed)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedSetup)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedRead)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedWrite)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedControl)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedUnknown)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedUnknownError)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(ServerRestarted)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Ok),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpAgentUnsupported)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(InvalidArea)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(BadOffset)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(UnalignedOffset)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(UnalignedSegmentAddress)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(UnalignedSegmentLength)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(BadDumpResponse)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(NotSupported)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpPresent)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(UnclaimedDumpArea)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(CannotClaimDumpArea)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpAreaInUse)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(BadSegmentAdd)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpMessageFailed)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailed)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedSetup)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedRead)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedWrite)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedControl)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedUnknown)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedUnknownError)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(ServerRestarted)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Ok),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpAgentUnsupported)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(InvalidArea)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(BadOffset)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(UnalignedOffset)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(UnalignedSegmentAddress)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(UnalignedSegmentLength)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(BadDumpResponse)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(NotSupported)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpPresent)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(UnclaimedDumpArea)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(CannotClaimDumpArea)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpAreaInUse)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(BadSegmentAdd)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpMessageFailed)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailed)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedSetup)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedRead)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedWrite)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedControl)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedUnknown)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedUnknownError)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(ServerRestarted)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Ok),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpAgentUnsupported)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(InvalidArea)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(BadOffset)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(UnalignedOffset)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(UnalignedSegmentAddress)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(UnalignedSegmentLength)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(BadDumpResponse)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(NotSupported)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpPresent)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(UnclaimedDumpArea)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(CannotClaimDumpArea)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpAreaInUse)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(BadSegmentAdd)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpMessageFailed)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailed)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedSetup)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedRead)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedWrite)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedControl)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedUnknown)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedUnknownError)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(ServerRestarted)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Ok),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpAgentUnsupported)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(InvalidArea)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(BadOffset)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(UnalignedOffset)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(UnalignedSegmentAddress)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(UnalignedSegmentLength)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(BadDumpResponse)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(NotSupported)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpPresent)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(UnclaimedDumpArea)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(CannotClaimDumpArea)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpAreaInUse)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(BadSegmentAdd)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpMessageFailed)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailed)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedSetup)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedRead)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedWrite)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedControl)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedUnknown)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedUnknownError)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(ServerRestarted)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Ok),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpAgentUnsupported)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(InvalidArea)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(BadOffset)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(UnalignedOffset)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(UnalignedSegmentAddress)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(UnalignedSegmentLength)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(BadDumpResponse)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(NotSupported)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpPresent)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(UnclaimedDumpArea)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(CannotClaimDumpArea)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpAreaInUse)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(BadSegmentAdd)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpMessageFailed)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailed)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedSetup)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedRead)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedWrite)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedControl)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedUnknown)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedUnknownError)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(ServerRestarted)),0
spd,task_jefe_api::__JEFE_CLIENT_COUNTERS,restart_me_raw,0
spd,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_mac_address_block(Ok),0
spd,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_mac_address_block(Err(ValueNotSet)),0
spd,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_mac_address_block(Ok),0
spd,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_mac_address_block(Err(ValueAlreadySet)),0
spd,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_identity(Ok),0
spd,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_identity(Err(ValueNotSet)),0
spd,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_identity(Ok),0
spd,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_identity(Err(ValueAlreadySet)),0
spd,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_next_boot_host_startup_options,0
spd,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_next_boot_host_startup_options,0
spd,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_spd_eeprom,0
spd,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_spd_present,4640
spd,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_spd_data,9280
spd,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_full_spd_data,0
spi2_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enable_clock_raw(Ok),1
spi2_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enable_clock_raw(Err(NoSuchPeripheral)),0
spi2_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,disable_clock_raw(Ok),0
spi2_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,disable_clock_raw(Err(NoSuchPeripheral)),0
spi2_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enter_reset_raw(Ok),1
spi2_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enter_reset_raw(Err(NoSuchPeripheral)),0
spi2_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,leave_reset_raw(Ok),1
spi2_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,leave_reset_raw(Err(NoSuchPeripheral)),0
spi2_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_configure_raw,24
spi2_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_set_reset,135316
spi2_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_read_input,0
spi2_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_toggle(Ok),0
spi2_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_toggle(Err),0
spi2_driver,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,read_uid,0
sprot,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enable_clock_raw(Ok),1
sprot,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enable_clock_raw(Err(NoSuchPeripheral)),0
sprot,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,disable_clock_raw(Ok),0
sprot,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,disable_clock_raw(Err(NoSuchPeripheral)),0
sprot,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enter_reset_raw(Ok),1
sprot,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enter_reset_raw(Err(NoSuchPeripheral)),0
sprot,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,leave_reset_raw(Ok),1
sprot,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,leave_reset_raw(Err(NoSuchPeripheral)),0
sprot,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_configure_raw,4
sprot,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_set_reset,1
sprot,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_read_input,0
sprot,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_toggle(Ok),0
sprot,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_toggle(Err),0
sprot,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,read_uid,0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_state,0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,set_state,0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,request_reset,0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_reset_reason,0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,set_reset_reason,1
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Ok),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpAgentUnsupported)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(InvalidArea)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(BadOffset)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(UnalignedOffset)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(UnalignedSegmentAddress)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(UnalignedSegmentLength)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(BadDumpResponse)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(NotSupported)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpPresent)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(UnclaimedDumpArea)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(CannotClaimDumpArea)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpAreaInUse)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(BadSegmentAdd)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpMessageFailed)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailed)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedSetup)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedRead)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedWrite)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedControl)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedUnknown)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(DumpFailedUnknownError)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_areas(Err(ServerRestarted)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Ok),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpAgentUnsupported)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(InvalidArea)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(BadOffset)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(UnalignedOffset)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(UnalignedSegmentAddress)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(UnalignedSegmentLength)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(BadDumpResponse)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(NotSupported)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpPresent)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(UnclaimedDumpArea)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(CannotClaimDumpArea)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpAreaInUse)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(BadSegmentAdd)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpMessageFailed)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailed)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedSetup)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedRead)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedWrite)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedControl)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedUnknown)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(DumpFailedUnknownError)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,get_dump_area(Err(ServerRestarted)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Ok),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpAgentUnsupported)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(InvalidArea)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(BadOffset)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(UnalignedOffset)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(UnalignedSegmentAddress)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(UnalignedSegmentLength)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(BadDumpResponse)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(NotSupported)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpPresent)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(UnclaimedDumpArea)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(CannotClaimDumpArea)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpAreaInUse)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(BadSegmentAdd)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpMessageFailed)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailed)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedSetup)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedRead)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedWrite)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedControl)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedUnknown)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(DumpFailedUnknownError)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,claim_dump_area(Err(ServerRestarted)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Ok),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpAgentUnsupported)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(InvalidArea)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(BadOffset)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(UnalignedOffset)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(UnalignedSegmentAddress)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(UnalignedSegmentLength)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(BadDumpResponse)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(NotSupported)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpPresent)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(UnclaimedDumpArea)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(CannotClaimDumpArea)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpAreaInUse)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(BadSegmentAdd)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpMessageFailed)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailed)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedSetup)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedRead)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedWrite)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedControl)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedUnknown)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(DumpFailedUnknownError)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task(Err(ServerRestarted)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Ok),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpAgentUnsupported)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(InvalidArea)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(BadOffset)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(UnalignedOffset)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(UnalignedSegmentAddress)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(UnalignedSegmentLength)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(BadDumpResponse)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(NotSupported)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpPresent)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(UnclaimedDumpArea)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(CannotClaimDumpArea)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpAreaInUse)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(BadSegmentAdd)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpMessageFailed)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailed)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedSetup)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedRead)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedWrite)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedControl)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedUnknown)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(DumpFailedUnknownError)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,dump_task_region(Err(ServerRestarted)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Ok),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpAgentUnsupported)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(InvalidArea)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(BadOffset)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(UnalignedOffset)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(UnalignedSegmentAddress)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(UnalignedSegmentLength)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(BadDumpResponse)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(NotSupported)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpPresent)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(UnclaimedDumpArea)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(CannotClaimDumpArea)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpAreaInUse)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(BadSegmentAdd)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpMessageFailed)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailed)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedSetup)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedRead)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedWrite)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedControl)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedUnknown)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(DumpFailedUnknownError)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,reinitialize_dump_from(Err(ServerRestarted)),0
sys,task_jefe_api::__JEFE_CLIENT_COUNTERS,restart_me_raw,0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Ok),1386
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(IllegalTransition)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(MuxToHostCPUFailed)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(MuxToSPFailed)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(ReadRegsFailed)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(CPUNotPresent)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(UnrecognizedCPU)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(A1Timeout)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(A0TimeoutGroupC)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(A0Timeout)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(I2cFault)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(ServerRestarted)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Ok),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(IllegalTransition)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(MuxToHostCPUFailed)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(MuxToSPFailed)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(ReadRegsFailed)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(CPUNotPresent)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(UnrecognizedCPU)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(A1Timeout)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(A0TimeoutGroupC)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(A0Timeout)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(I2cFault)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(ServerRestarted)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Ok),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(IllegalTransition)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(MuxToHostCPUFailed)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(MuxToSPFailed)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(ReadRegsFailed)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(CPUNotPresent)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(UnrecognizedCPU)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(A1Timeout)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(A0TimeoutGroupC)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(A0Timeout)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(I2cFault)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(ServerRestarted)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Ok),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(IllegalTransition)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(MuxToHostCPUFailed)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(MuxToSPFailed)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(ReadRegsFailed)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(CPUNotPresent)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(UnrecognizedCPU)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(A1Timeout)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(A0TimeoutGroupC)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(A0Timeout)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(I2cFault)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(ServerRestarted)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,send_hardware_nmi(Ok),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,send_hardware_nmi(Err),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Ok),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(IllegalTransition)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(MuxToHostCPUFailed)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(MuxToSPFailed)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(ReadRegsFailed)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(CPUNotPresent)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(UnrecognizedCPU)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(A1Timeout)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(A0TimeoutGroupC)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(A0Timeout)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(I2cFault)),0
thermal,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(ServerRestarted)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Ok),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(InvalidSensor)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(NoReading)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(NotPresent)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(DeviceError)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(DeviceUnavailable)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(DeviceTimeout)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(DeviceOff)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Ok),18101
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(InvalidSensor)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(NoReading)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(NotPresent)),1701
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(DeviceError)),2
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(DeviceUnavailable)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(DeviceTimeout)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(DeviceOff)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_raw_reading(Ok),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_raw_reading(Err(InvalidSensor)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_raw_reading(Err(NoReading)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_last_data(Ok),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_last_data(Err(InvalidSensor)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_last_data(Err(NoReading)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_last_nodata(Ok),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_last_nodata(Err(InvalidSensor)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_last_nodata(Err(NoReading)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_min(Ok),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_min(Err(InvalidSensor)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_min(Err(NoReading)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_max(Ok),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_max(Err(InvalidSensor)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_max(Err(NoReading)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,post(Ok),26417
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,post(Err(InvalidSensor)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,post(Err(NoReading)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,nodata(Ok),2689
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,nodata(Err(InvalidSensor)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,nodata(Err(NoReading)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_nerrors(Ok),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_nerrors(Err(InvalidSensor)),0
thermal,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_nerrors(Err(NoReading)),0
thermal,task_thermal::__RINGBUF,Start,1
thermal,task_thermal::__RINGBUF,ThermalMode(Off),0
thermal,task_thermal::__RINGBUF,ThermalMode(Manual),0
thermal,task_thermal::__RINGBUF,ThermalMode(Auto),1
thermal,task_thermal::__RINGBUF,AutoState(Boot),4
thermal,task_thermal::__RINGBUF,AutoState(Running),3
thermal,task_thermal::__RINGBUF,AutoState(Overheated),0
thermal,task_thermal::__RINGBUF,AutoState(Uncontrollable),0
thermal,task_thermal::__RINGBUF,FanReadFailed,0
thermal,task_thermal::__RINGBUF,MiscReadFailed,0
thermal,task_thermal::__RINGBUF,SensorReadFailed,2
thermal,task_thermal::__RINGBUF,PostFailed,0
thermal,task_thermal::__RINGBUF,ControlPwm,693
thermal,task_thermal::__RINGBUF,PowerModeChanged,3
thermal,task_thermal::__RINGBUF,PowerDownFailed,0
thermal,task_thermal::__RINGBUF,ControlError(InvalidFan),0
thermal,task_thermal::__RINGBUF,ControlError(InvalidPWM),0
thermal,task_thermal::__RINGBUF,ControlError(DeviceError),0
thermal,task_thermal::__RINGBUF,ControlError(NotInManualMode),0
thermal,task_thermal::__RINGBUF,ControlError(NotInAutoMode),0
thermal,task_thermal::__RINGBUF,ControlError(AlreadyInAutoMode),0
thermal,task_thermal::__RINGBUF,ControlError(InvalidWatchdogTime),0
thermal,task_thermal::__RINGBUF,ControlError(InvalidParameter),0
thermal,task_thermal::__RINGBUF,ControlError(InvalidIndex),0
thermal,task_thermal::__RINGBUF,ControlError(ServerDeath),0
thermal,task_thermal::__RINGBUF,FanPresenceUpdateFailed,0
thermal,task_thermal::__RINGBUF,FanAdded,6
thermal,task_thermal::__RINGBUF,FanRemoved,0
thermal,task_thermal::__RINGBUF,PowerDownAt,0
thermal,task_thermal::__RINGBUF,AddedDynamicInput,0
thermal,task_thermal::__RINGBUF,RemovedDynamicInput,0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Ok),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Err(NotYours)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Err(QueueEmpty)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Err(Other)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Err(ServerRestarted)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Ok),1380
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(NotYours)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(InvalidVLan)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(QueueFull)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(Other)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(ServerRestarted)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,smi_read(Ok),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,smi_read(Err),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,smi_write(Ok),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,smi_write(Err),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Ok),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Err(InvalidPort)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Err(NotImplemented)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Err(Other)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Err(ServerRestarted)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Ok),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Err(InvalidPort)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Err(NotImplemented)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Err(Other)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Err(ServerRestarted)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Ok),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(NotAvailable)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(BadMacIndex)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(BadRegister)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(WrongChipId)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(ServerRestarted)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Ok),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(NotAvailable)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(BadMacIndex)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(BadRegister)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(WrongChipId)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(ServerRestarted)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Ok),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(NotAvailable)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(BadMacIndex)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(BadRegister)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(WrongChipId)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(ServerRestarted)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,get_mac_address,1
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,get_spare_mac_addresses,0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Ok),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Err(NotAvailable)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Err(VscError)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Err(KszError)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Err(ServerRestarted)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Ok),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Err(NotAvailable)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Err(VscError)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Err(KszError)),0
udpbroadcast,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Err(ServerRestarted)),0
udpbroadcast,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_mac_address_block(Ok),0
udpbroadcast,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_mac_address_block(Err(ValueNotSet)),0
udpbroadcast,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_mac_address_block(Ok),0
udpbroadcast,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_mac_address_block(Err(ValueAlreadySet)),0
udpbroadcast,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_identity(Ok),1
udpbroadcast,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_identity(Err(ValueNotSet)),0
udpbroadcast,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_identity(Ok),0
udpbroadcast,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_identity(Err(ValueAlreadySet)),0
udpbroadcast,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_next_boot_host_startup_options,0
udpbroadcast,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_next_boot_host_startup_options,0
udpbroadcast,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,set_spd_eeprom,0
udpbroadcast,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_spd_present,0
udpbroadcast,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_spd_data,0
udpbroadcast,task_packrat_api::__PACKRAT_CLIENT_COUNTERS,get_full_spd_data,0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Ok),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Err(NotYours)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Err(QueueEmpty)),1
udpecho,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Err(Other)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,recv_packet(Err(ServerRestarted)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Ok),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(NotYours)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(InvalidVLan)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(QueueFull)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(Other)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,send_packet(Err(ServerRestarted)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,smi_read(Ok),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,smi_read(Err),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,smi_write(Ok),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,smi_write(Err),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Ok),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Err(InvalidPort)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Err(NotImplemented)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Err(Other)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,read_phy_reg(Err(ServerRestarted)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Ok),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Err(InvalidPort)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Err(NotImplemented)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Err(Other)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,write_phy_reg(Err(ServerRestarted)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Ok),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(NotAvailable)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(BadMacIndex)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(BadRegister)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(WrongChipId)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac_count(Err(ServerRestarted)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Ok),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(NotAvailable)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(BadMacIndex)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(BadRegister)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(WrongChipId)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_mac(Err(ServerRestarted)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Ok),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(NotAvailable)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(BadMacIndex)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(BadRegister)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(WrongChipId)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,read_ksz8463_reg(Err(ServerRestarted)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,get_mac_address,0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,get_spare_mac_addresses,0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Ok),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Err(NotAvailable)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Err(VscError)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Err(KszError)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,management_link_status(Err(ServerRestarted)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Ok),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Err(NotAvailable)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Err(VscError)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Err(KszError)),0
udpecho,task_net_api::__NET_CLIENT_COUNTERS,management_counters(Err(ServerRestarted)),0
user_leds,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enable_clock_raw(Ok),0
user_leds,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enable_clock_raw(Err(NoSuchPeripheral)),0
user_leds,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,disable_clock_raw(Ok),0
user_leds,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,disable_clock_raw(Err(NoSuchPeripheral)),0
user_leds,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enter_reset_raw(Ok),0
user_leds,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,enter_reset_raw(Err(NoSuchPeripheral)),0
user_leds,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,leave_reset_raw(Ok),0
user_leds,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,leave_reset_raw(Err(NoSuchPeripheral)),0
user_leds,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_configure_raw,1
user_leds,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_set_reset,1
user_leds,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_read_input,0
user_leds,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_toggle(Ok),0
user_leds,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,gpio_toggle(Err),0
user_leds,drv_stm32xx_sys_api::__SYS_CLIENT_COUNTERS,read_uid,0
