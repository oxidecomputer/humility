task,variable,variant,count
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Ok),75
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(IllegalTransition)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(MuxToHostCPUFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(MuxToSPFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(ReadRegsFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(CPUNotPresent)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(UnrecognizedCPU)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(A1Timeout)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(A0TimeoutGroupC)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(A0Timeout)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(I2cFault)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,get_state(Err(ServerRestarted)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Ok),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(IllegalTransition)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(MuxToHostCPUFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(MuxToSPFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(ReadRegsFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(CPUNotPresent)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(UnrecognizedCPU)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(A1Timeout)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(A0TimeoutGroupC)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(A0Timeout)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(I2cFault)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,set_state(Err(ServerRestarted)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Ok),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(IllegalTransition)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(MuxToHostCPUFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(MuxToSPFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(ReadRegsFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(CPUNotPresent)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(UnrecognizedCPU)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(A1Timeout)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(A0TimeoutGroupC)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(A0Timeout)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(I2cFault)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_on(Err(ServerRestarted)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Ok),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(IllegalTransition)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(MuxToHostCPUFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(MuxToSPFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(ReadRegsFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(CPUNotPresent)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(UnrecognizedCPU)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(A1Timeout)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(A0TimeoutGroupC)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(A0Timeout)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(I2cFault)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,fans_off(Err(ServerRestarted)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,send_hardware_nmi(Ok),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,send_hardware_nmi(Err),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Ok),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(IllegalTransition)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(MuxToHostCPUFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(MuxToSPFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(ReadRegsFailed)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(CPUNotPresent)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(UnrecognizedCPU)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(A1Timeout)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(A0TimeoutGroupC)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(A0Timeout)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(I2cFault)),0
power,drv_gimlet_seq_api::__SEQUENCER_CLIENT_COUNTERS,read_fpga_regs(Err(ServerRestarted)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Ok),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(InvalidSensor)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(NoReading)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(NotPresent)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(DeviceError)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(DeviceUnavailable)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(DeviceTimeout)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get(Err(DeviceOff)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Ok),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(InvalidSensor)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(NoReading)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(NotPresent)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(DeviceError)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(DeviceUnavailable)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(DeviceTimeout)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_reading(Err(DeviceOff)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_raw_reading(Ok),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_raw_reading(Err(InvalidSensor)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_raw_reading(Err(NoReading)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_last_data(Ok),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_last_data(Err(InvalidSensor)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_last_data(Err(NoReading)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_last_nodata(Ok),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_last_nodata(Err(InvalidSensor)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_last_nodata(Err(NoReading)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_min(Ok),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_min(Err(InvalidSensor)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_min(Err(NoReading)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_max(Ok),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_max(Err(InvalidSensor)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_max(Err(NoReading)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,post(Ok),1332
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,post(Err(InvalidSensor)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,post(Err(NoReading)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,nodata(Ok),5032
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,nodata(Err(InvalidSensor)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,nodata(Err(NoReading)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_nerrors(Ok),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_nerrors(Err(InvalidSensor)),0
power,task_sensor_api::__SENSOR_CLIENT_COUNTERS,get_nerrors(Err(NoReading)),0
